{"version":3,"sources":["http.comon.js","actions/user.action.js","components/Navbar.js","components/HomePage.js","app/contractAbi.js","components/AdminLoginPage.js","components/election/AddNewElection.js","components/election/AddNewAdmin.js","actions/selection.action.js","components/election/Elections.js","components/election/VoterManagement.js","components/election/ElectionVote.js","components/election/ElectionStatus.js","components/election/ElectionsPage.js","components/ForgotPassword.js","components/CandidateLogin.js","App.js","reducers/authentication.reducer.js","reducers/voter.reducer.js","reducers/contractAddress.reducer.js","reducers/admin.reducer.js","reducers/selection.reducer.js","reducers/index.js","reducers/alert.reducer.js","reducers/registeration.reducer.js","reducers/forgotEmail.reducer.js","reducers/pageInfo.reducer.js","store.js","index.js","actions/admin.action.js","components/Particles.js","actions/alert.action.js","components/voter/VoterLoginPage.js","actions/forgotEmail.action.js","components/voter/VoterRegisterPage.js","actions/types.js","actions/pageInfo.action.js","getWeb3.js"],"names":["axios","create","baseURL","headers","userActions","login","userData","dispatch","user","type","userType","LOGIN_REQUEST","http","post","then","res","localStorage","setItem","JSON","stringify","data","LOGIN_SUCCESS","success","error","LOGIN_FAILURE","failure","toString","alertActions","response","register","REGISTER_REQUEST","REGISTER_SUCCESS","console","log","REGISTER_FAILURE","logout","removeItem","LOGOUT","getAll","users","GET_ALL_SUCCESS","GET_ALL_FAILURE","delte","id","DELETE_SUCCESS","useStyles","makeStyles","theme","appBar","paddingTop","paddingBottom","backgroundColor","color","logo","width","button","borderRadius","title","fontFamily","fontSize","customeColor","palette","iconButton","fontWeight","marginRight","spacing","margin","linkButton","textDecoration","offset","mixins","toolbar","Navbar","classes","history","useHistory","useDispatch","useEffect","handleToHome","push","AppBar","className","elevation","Grid","container","style","item","xs","sm","md","lg","xl","Button","onClick","src","Typography","variant","marginLeft","justifyContent","IconButton","Img","styled","display","maxWidth","maxHeight","paddingLeft","paddingRight","root","flexGrow","home","drawerHeader","alignItems","padding","darkBackground","backgroundImage","summaryTitle","marginBottom","summaryContent","createButton","cardPane","footer","flowText","textAlign","cardGrid","card","flexDirection","cardMedia","cardContent","avatar","blue","height","avatarContainer","quoteBox","background","position","quoteTail","content","top","left","borderStyle","borderTop","borderTopColor","borderLeft","borderLeftColor","borderRight","borderRightColor","borderBottom","borderBottomColor","image","backgroundRepeat","backgroundSize","backgroundPosition","optionTitle","optionContent","dashboardImg","overflow","animateGrid","zIndex3","zIndex","mdHiden","bigTitle","bigContent","font18_14","cards","description","img","HomePage","learnRef","useRef","pageActions","setPageName","Fragment","component","Particles","classNames","current","scrollIntoView","map","index","Card","CardMedia","CardContent","gutterBottom","ref","Avatar","alt","marginTop","contractAbi","Alert","React","forwardRef","props","paper","form","panel","textField","AdminLoginPage","electionContractAddress","useSelector","state","adminInfo","isAdmin","useState","electionContract","setElectionContract","currentAccount","setCurrentAccount","alertContent","alert","open","setOpen","checkMetaMask","a","getWeb3","web3","eth","requestAccounts","getAccounts","accounts","length","contract","Contract","window","ethereum","on","adminActions","clear","handleClose","event","reason","Snackbar","autoHideDuration","onClose","severity","sx","message","Paper","CssBaseline","Divider","startIcon","methods","admins","call","from","catch","err","ListItem","listStyle","iconBtn","linkBtn","textTransform","transform","bgcolor","boxShadow","p","AddNewElection","startDate","setStartDate","endDate","setEndDate","dlgOpen","setDlgOpen","setAvatar","alertOpen","setAlertOpen","linkOpen","setLinkOpen","setTxhash","candidateName","inputs","setInputs","candidateList","setCandidateList","electionName","setElectionName","avatarFile","setAvatarFile","balance","setBalance","getBalance","result","utils","fromWei","handleCandidateChange","e","target","name","value","handleAlertClose","isEmpty","Box","Contacts","textOverflow","textOverflowX","overflowX","MonetizationOn","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","renderInput","TextField","label","inputFormat","onChange","newValue","valueDefault","required","fullWidth","Add","dateJSON","moment","unix","_candidateList","setTimeout","adminAddElection","send","hash","receipt","key","Chip","onDelete","chipToDelete","filter","chip","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","hidden","file","files","base64String","reader","FileReader","onload","replace","readAsDataURL","TextareaAutosize","maxRows","placeholder","minHeight","newCandidate","avatarBase64","AddNewAdmin","adminAddress","setAdminAddress","adminAddAdmin","selectionActions","setSelectedItem","defaultTheme","createTheme","createStyles","flexWrap","breakpoints","down","divider","QuickSearchToolbar","InputProps","startAdornment","endAdornment","size","visibility","clearSearch","Elections","rows","columns","field","setData","setRows","searchText","setSearchText","getPastEvents","fromBlock","toBlock","events","elections","forEach","element","returnValues","requestSearch","searchValue","searchRegex","RegExp","filteredRows","row","Object","keys","some","test","onSelectionModelChange","newSelectionModel","selectedName","selectedItem","selectedId","handleSelectionChange","components","Toolbar","componentsProps","modalStyle","border","headerName","sortable","renderCell","params","stopPropagation","api","thisRow","getAllColumns","c","getValue","setSelectedVoterWallet","setSelectedVoterName","voters","voter","selectedVoterWallet","selectedVoterName","amount","setAmount","handleAddVoter","adminAddVoter","toWei","pendingVoters","i","_balance","walletaccount","wei","_id","no","username","email","address","phone","parseFloat","toFixed","action","mt","statusbutton","cardActive","ElectionVote","selectionInfo","electionOptions","setElectionOptions","registered","setRegistered","voted","setVoted","votedName","setVotedName","activeId","setActiveId","checkPromissionToVote","userVote","vote_res","Number","electionInfo","electionJson","parse","_json","st","en","_options","candidateImageList","totalVote","_total","percentage","electionOptionsList","totalOptionVote","_optionVotes","electionOption","optionIndex","base64Image","optionLength","ArrowBackIosOutlined","overflowY","CardActionArea","circle","currentDate","vote","Check","format","boardTitle","boardContent","boardIndex","electionTitle","votingStatus","setVotingStatus","votingInfo","argument","valueField","argumentField","dataSource","orientation","itemTextPosition","horizontalAlignment","verticalAlignment","columnCount","enabled","visible","customizeText","arg","valueText","percentText","chart","ElectionsPage","anchorEl","setAnchorEl","Boolean","pagename","setPagename","handleToLogout","Tooltip","currentTarget","ml","Menu","PaperProps","mr","right","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","ListItemIcon","LibraryAdd","FindInPage","AssignmentInd","PersonAdd","exact","path","VoterManagement","ElectionStatus","ForgotPassword","forgotEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","CandidateLogin","ScrollTop","children","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","anchor","ownerDocument","document","querySelector","behavior","block","role","bottom","App","pageName","pageInfo","VoterLoginPage","VoterRegisterPage","Fab","getItem","initialState","loggedIn","ropsten","rootRudecer","combineReducers","alertType","SUCCESS","ERROR","CLEAR","authentication","loggingIn","registeration","registering","val","loggerMiddleware","createLogger","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","Canvas","updateWindowDimensions","setState","innerWidth","innerHeight","this","addEventListener","removeEventListener","Component","videoConstraints","facingMode","primary","main","submit","webcamRef","setImage","webCamEnable","mailDlgOpen","setMailDlgOpen","password","submitted","setSubmitted","code","setCode","vcode","setVcode","setAddress","setForgotEmail","capture","useCallback","imageSrc","getScreenshot","handleSubmit","Buffer","handleChange","noValidate","onSubmit","autoComplete","autoFocus","control","audio","screenshotFormat","verificationCode","forgotEmailActions","modalGrid","setEmail","photo","setVoter","setUser","newVoter","luxandId","verified","GET_ALL_REQUEST","DELETE_REQUEST","DELETE_FAILURE","Promise","resolve","reject","Web3","givenProvider"],"mappings":"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","file":"static/js/main.d3c202f8.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport default axios.create({\r\n    // baseURL:\"https://nepalvotes.info\",\r\n    baseURL: \"http://localhost:8080\",\r\n    headers:{\r\n        \"Content-type\":\"application/json\"\r\n    }\r\n});","import http from '../http.comon.js';\r\nimport {userType} from './types';\r\nimport {alertActions} from './alert.action';\r\n\r\nexport const userActions={\r\n    login,\r\n    register,\r\n    logout,\r\n    getAll,\r\n    delte:_delete\r\n}\r\nfunction login(userData){\r\n    return dispatch=>{\r\n        dispatch(request(userData));\r\n        http.post('/auth/login', userData)\r\n            .then(res=>{\r\n                localStorage.setItem('user',JSON.stringify(res.data));\r\n                dispatch(success(res.data));\r\n            },\r\n            error=>{\r\n                dispatch(failure(error.toString()));\r\n                dispatch(alertActions.error(error.response.data));\r\n            }\r\n        );\r\n    };\r\n    function request(user){ return {type:userType.LOGIN_REQUEST,user}}\r\n    function success(user){return {type:userType.LOGIN_SUCCESS, user}}\r\n    function failure(error){return {type:userType.LOGIN_FAILURE,error}}\r\n}\r\n\r\nfunction logout(){\r\n    localStorage.removeItem('user');\r\n    return {type:userType.LOGOUT};\r\n}\r\n\r\nfunction register(userData){\r\n    return dispatch=>{\r\n        dispatch(request());\r\n        \r\n        http.post('/auth/user-add',userData)\r\n            .then(user=>{\r\n                dispatch(success());\r\n                dispatch(alertActions.success('Registration successful!'));\r\n            },\r\n            error=>{\r\n                console.log(error.response);\r\n                dispatch(failure(error.toString()));\r\n                dispatch(alertActions.error(error.response.data));\r\n                \r\n            });\r\n    };\r\n    function request(){ return {type:userType.REGISTER_REQUEST}}\r\n    function success(){return {type:userType.REGISTER_SUCCESS}};\r\n    function failure(){return {type:userType.REGISTER_FAILURE}};\r\n}\r\n\r\nfunction getAll(){\r\n    return dispatch=>{\r\n        let users;\r\n        http.post('/auth/user-data')\r\n            .then(response=>{\r\n                users = response.data;\r\n                localStorage.setItem('users',JSON.stringify(response.data));\r\n                dispatch(success(users));\r\n            },\r\n            error=>{\r\n                dispatch(failure(error.toString()));\r\n            }\r\n            );\r\n    };\r\n    function success(users){return {type:userType.GET_ALL_SUCCESS, users}}\r\n    function failure(error){return {type:userType.GET_ALL_FAILURE, error}}\r\n}\r\n\r\nfunction _delete(id){\r\n    return dispatch=>{\r\n        dispatch(success(id));\r\n    };\r\n    function success(id){ return {type:userType.DELETE_SUCCESS,id}}\r\n    function failure(id, error){ return {type:userType.DELETE_FAILURE,id, error}}\r\n}\r\nfunction registerCandidateList(candidateList){\r\n    return dispatch=>{\r\n        \r\n    }\r\n}\r\n","import React,{useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ToolBar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Typography } from '@material-ui/core';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport {userActions} from '../actions/user.action';\r\nimport {\r\n    Grid\r\n} from '@material-ui/core';\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n    appBar:{\r\n        paddingTop:\"2vh\",\r\n        paddingBottom:\"2vh\",\r\n        backgroundColor:\"#071722\",\r\n        color:\"fff\",\r\n    },\r\n    logo:{\r\n        width:\"45px\",\r\n    },\r\n    button:{\r\n        borderRadius:\"25px\",\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n            color: '#3c52b2',\r\n        },\r\n    },\r\n    title:{\r\n        // flexGrow:1,\r\n        width:\"5vw\",\r\n        fontFamily:\"Cooper Black\",\r\n        fontSize:18\r\n    },\r\n    customeColor:{\r\n        backgroundColor:theme.palette,\r\n    },\r\n    iconButton:{\r\n        // fontFamily:\"Microsoft Sans Serif Regular\",\r\n        fontWeight:1000,\r\n        fontSize:24,\r\n        marginRight:theme.spacing(2),\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n          backgroundColor: 'transparent',\r\n          color: '#009900',\r\n      },\r\n\r\n      ['@media (max-width:400px)']: {\r\n        fontSize: 16,\r\n        fontWeight: 500,\r\n        margin: 0,\r\n      },\r\n    },\r\n    linkButton:{\r\n        textDecoration:\"none\",\r\n    },\r\n    offset:theme.mixins.toolbar\r\n}));\r\n\r\nfunction Navbar(){\r\n    const classes=useStyles();\r\n    let history=useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>({\r\n\r\n    },[]));\r\n    const handleToAdminPage=()=>{\r\n        history.push(\"/admin\");\r\n    }\r\n    const handleToHome=()=>{\r\n        history.push('/');\r\n    }\r\n\r\n    const handleToVoterLoginPage=()=>{\r\n        dispatch(userActions.logout());\r\n        history.push('/voter-login');\r\n\r\n    }\r\n    const handleToElectionsPage=()=>{\r\n        history.push('/candidate-login');\r\n    }\r\n    return(\r\n        <>\r\n            <AppBar color=\"default\" className={classes.appBar} elevation={0}>\r\n                <ToolBar>\r\n                    <Grid container style={{width:\"100%\"}}>\r\n                        <Grid  container item  xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Button className={classes.button} onClick={handleToHome}>\r\n                                <img src=\"/image/logo-white.png\" className={classes.logo} />\r\n                                <Typography variant=\"h5\" style={{marginLeft:\"1vw\", color:\"white\"}}>\r\n                                    NepalVotes\r\n                                </Typography>\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid  container justifyContent=\"center\" item xs={12} sm={12} md={6} lg={6} xl={6}> \r\n                            <IconButton color=\"inherit\" className={classes.iconButton} onClick={handleToHome}>\r\n                                Home\r\n                            </IconButton>\r\n                            <IconButton color=\"inherit\" className={classes.iconButton} onClick={handleToAdminPage}>\r\n                                Admin\r\n                            </IconButton>\r\n                            <IconButton color=\"inherit\" className={classes.iconButton} onClick={handleToVoterLoginPage}>\r\n                                Voter\r\n                            </IconButton> \r\n                            <IconButton color=\"inherit\" className={classes.iconButton} onClick={handleToElectionsPage}>\r\n                                Elections\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                   \r\n                </ToolBar>\r\n\r\n            </AppBar>\r\n        </>\r\n    );\r\n}\r\n export default Navbar;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles, styled } from \"@material-ui/core/styles\";\r\nimport { \r\n    Container,\r\n    Card, \r\n    CardMedia, \r\n    CardContent, \r\n    Avatar,\r\n    Typography,\r\n    Grid,\r\n    Box,\r\n    Button,\r\n    AppBar,\r\n    Toolbar,\r\n    \r\n} from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport {pageActions} from '../actions/pageInfo.action';\r\nimport Particles from './Particles';\r\nimport classNames from 'classnames'\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useRef} from 'react';\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {\"Copyright © \"}\r\n        {/* <Link color=\"inherit\" href=\"https://react.school\">\r\n          React School\r\n        </Link>{\" \"} */}\r\n        {new Date().getFullYear()}\r\n        {\".\"}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  const Img = styled('img')({\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n    paddingLeft:'5%',\r\n    paddingRight:'5%',\r\n  });\r\n  \r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        flexGrow: 1,\r\n    },\r\n    home:{\r\n        backgroundColor:\"#fff\",\r\n    },\r\n    drawerHeader:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '3%',\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n        backgroundColor:\"#071722\",\r\n        width:\"100%\",\r\n    },\r\n    darkBackground:{\r\n        backgroundImage: `url('./image/background.jpg')`,\r\n        paddingTop: '150px',\r\n        // backgroundColor:\"#071722\",\r\n    },\r\n    summaryTitle:{\r\n        color:\"#fff\",\r\n        paddingLeft:'5%',\r\n        paddingRight:'5%',\r\n        fontSize: '2.5rem',\r\n        marginBottom: '1rem',\r\n\r\n        ['@media (max-width:400px)']: {\r\n            fontSize: '2rem',\r\n        },\r\n    },\r\n    summaryContent:{\r\n        color:\"#fff\",\r\n        paddingLeft:'5%',\r\n        paddingRight:'5%',\r\n        fontSize: '2rem',\r\n        marginBottom: '1rem',\r\n\r\n        ['@media (max-width:400px)']: {\r\n            fontSize: '1.5rem',\r\n        },\r\n    },\r\n    createButton:{\r\n        backgroundColor:\"#00aa00\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#007700',\r\n        },\r\n        margin:theme.spacing(1,5,2,5),\r\n        padding:theme.spacing(1, 3),\r\n\r\n        fontSize: 24,\r\n\r\n        ['@media (max-width:400px)']: {\r\n            fontSize: 18,\r\n        },\r\n    },\r\n    cardPane:{\r\n      padding:'4%',\r\n    },\r\n    footer: {\r\n      padding: '5%',\r\n    },\r\n    flowText:{\r\n        backgroundColor:\"#eee\",\r\n        padding:'5%',\r\n        textAlign: 'center',\r\n        width: '100%',\r\n    },\r\n    cardGrid: {\r\n        padding:'5%',\r\n    },\r\n    card: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n        width: '100%',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: \"56.25%\", // 16:9\r\n      \r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    avatar:{\r\n        backgroundColor:blue[500],\r\n        width:\"64px\",\r\n        height:\"64px\",\r\n    },\r\n    avatarContainer:{\r\n        // marginLeft:\"10%\",\r\n        // marginTop:\"0.5%\", \r\n        // marginRight:\"1vw\"\r\n    },\r\n    quoteBox:{\r\n        background:\"#d0e0b0\",\r\n        borderRadius:\"1rem\",\r\n        marginBottom:\"-0.1em\",\r\n        position:\"relative\",\r\n        padding:\"1.2em\",\r\n        margin:theme.spacing(5,5,3,5),\r\n    },\r\n    quoteTail:{\r\n        content:\" \",\r\n        width:0,\r\n        height:0,\r\n        top:\"100%\",\r\n        left:\"33px\",\r\n        borderStyle:\"solid\",\r\n        borderTop:\"12px\",\r\n        borderTopColor:'#d0e0b0',\r\n        borderLeft:\"12px\",\r\n        borderLeftColor:'transparent',\r\n        borderRight:\"12px\",\r\n        borderRightColor:\"transparent\",\r\n        borderBottom:\"0px\",\r\n        borderBottomColor:\"trasnparent\",\r\n        margin:theme.spacing(0,0,0,0),\r\n    },\r\n    image: {\r\n      backgroundImage: \"url(image/guy-holding-ipad.jpg)\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\",    \r\n      width: \"100%\",\r\n    //   color:\"#fff\",\r\n     \r\n    },\r\n    optionTitle:{\r\n        margin:theme.spacing(1,2,1,2),\r\n    },\r\n    optionContent:{\r\n        margin:theme.spacing(1,2,1,2),\r\n    },\r\n    dashboardImg:{\r\n        position: 'relative',\r\n        width: 'auto',\r\n        /* height: 100%, */\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    animateGrid:{\r\n        position: 'absolute',\r\n    },\r\n    zIndex3:{\r\n        zIndex: '3',\r\n    },\r\n    mdHiden:{\r\n        display: 'block',\r\n        ['@media (max-width:400px)']: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    bigTitle:{\r\n        fontSize: 32,\r\n        ['@media (max-width:400px)']: {\r\n            fontSize: 18,\r\n        },\r\n    },\r\n    bigContent: {\r\n        fontSize: 20,\r\n        ['@media (max-width:400px)']: {\r\n            fontSize: 16,\r\n        },\r\n    },\r\n    font18_14: {\r\n        fontSize: 18,\r\n        ['@media (max-width:400px)']: {\r\n            fontSize: 14,\r\n        },\r\n    }\r\n}));\r\n\r\nconst cards=[\r\n    {\r\n        title:\"Privacy\",\r\n        description:'Only voter can know who they voted for.',\r\n        img:\"./function/privacy.jpg\"\r\n    },\r\n    {\r\n        title:\"Transparency\",\r\n        description:'The system is transparent and everyone with metamask wallet can see The real-time results of the voting process.',\r\n        img:\"./function/transparancy.jpg\"\r\n    },\r\n    {\r\n        title:\"Verifiability\",\r\n        description:`The voter can confirm if their ballot is counted efficiently after they voted.`,\r\n        img:\"./function/verifiability.jpg\"\r\n    },\r\n    {\r\n        title:\"Robustness\",\r\n        description:`No one can influence or adjust the final voting result whilst tallying.`,\r\n        img:\".//function/robustness.jpg\"\r\n    }\r\n];\r\n\r\nfunction HomePage(){\r\n    \r\n    const classes=useStyles();\r\n    const learnRef = useRef(null);\r\n    let history=useHistory();\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(pageActions.setPageName('home'));\r\n    })\r\n\r\n    const executeScroll = () => learnRef.current.scrollIntoView()    \r\n\r\n    const handleToElectionsPage=()=>{\r\n        history.push('/candidate-login');\r\n    }\r\n    return(\r\n        <>\r\n            <React.Fragment>\r\n                <Grid container component=\"main\" className={classes.root}>\r\n                    \r\n                    {/* <Grid className={classes.drawerHeader}/> */}\r\n                    <Particles/>\r\n                    <Grid container justifyContent=\"center\" className={classNames(classes.darkBackground)}>\r\n                        <Grid className={classes.cardGrid} container justifyContent=\"center\" item xs={12} sm={8} md={8} lg={8} alignItems=\"center\">\r\n                            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                                <Grid container justifyContent=\"center\" item md={12} >\r\n                                    <Typography component=\"h3\" variant=\"h3\" className={classes.summaryTitle}style={{paddingTop:'20px'}}>\r\n                                        Decentralized, peer to peer multivoting election\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container justifyContent=\"center\" item md={12}>\r\n                                    <Typography component=\"h3\" variant=\"h5\" className={classes.summaryContent}>\r\n                                        One stop solution for your organization elections.\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container justifyContent=\"center\" item md={12}>\r\n                                    <Button className={classes.createButton} onClick={executeScroll}>\r\n                                        Learn More\r\n                                    </Button>\r\n                                </Grid>\r\n                                \r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item  xs={12} sm={4} md={4} lg={4} justifyContent=\"center\" className={classNames(classes.zIndex3, classes.mdHiden)}>\r\n                            <Img src=\"image/phone.png\"/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justifyContent=\"center\">\r\n                        <Typography className={classNames(classes.flowText, classes.bigTitle)}>\r\n                        “Innovation for Prosperity” by Nepal Academy of Science and Technology(NAST).\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container justifyContent=\"center\" >\r\n                        <Grid className={classes.cardPane}>\r\n                            <Typography component=\"h3\" variant=\"h4\" className={classes.bigTitle}>\r\n                                Conduct your election at any location\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container style={{width:\"90%\"}}>\r\n                            <Grid container className={classes.cardGrid}>\r\n                                <Grid container spacing={4}>\r\n                                    {cards.map((card,index) => (\r\n                                    <Grid container item key={index} xs={12} sm={6} md={6}>\r\n                                        <Card className={classes.card}>\r\n                                            <CardMedia\r\n                                                className={classes.cardMedia}\r\n                                                image={`image/${card.img}`}\r\n                                                title=\"Image title\"\r\n                                            />\r\n                                            <CardContent className={classes.cardContent}>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {card.title}\r\n                                                </Typography>\r\n                                                <Typography>{card.description}</Typography>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                    ))}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid> \r\n                    <Grid container item justifyContent=\"center\"  style={{backgroundColor:'#fff'}}>            \r\n                        <Typography ref={learnRef} variant=\"h4\" className={classes.bigTitle} style={{paddingTop:'5%', paddingBottom:'2%'}}>\r\n                            How the system works?\r\n                        </Typography>\r\n                        {/* <Typography variant=\"h6\" style={{marginLeft:\"10%\", marginRight:\"10%\"}}>\r\n                            You're always in control with Election Runner. \r\n                            It's easy to build and customize an election.\r\n                        </Typography> */}\r\n                    </Grid>\r\n                    <Grid container justifyContent=\"center\" style={{ paddingTop:\"1vw\", paddingBottom:\"3vw\",backgroundColor:'#fff'}}>\r\n                        <Grid container justifyContent=\"center\" item md={8}> \r\n                            \r\n                            <Grid container style={{paddingTop:'3%', paddingLeft:'5%', paddingRight:'5%'}}>\r\n                                <Grid container justifyContent=\"center\" alignItems=\"center\" item sm={1} md={1} className={classes.avatarContainer}>\r\n                                    <Avatar alt=\"Remy Sharp\" className={classes.avatar}>\r\n                                        1\r\n                                    </Avatar>\r\n                                </Grid>\r\n                                <Grid item sm={11} md={11}>\r\n                                    <Grid container justifyContent=\"left\">\r\n                                        <Typography variant=\"h5\" className={classNames(classes.optionTitle, classes.bigTitle)}>\r\n                                            Manage Election\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid container justifyContent=\"left\">\r\n                                        <Typography variant=\"h6\" className={classNames(classes.optionContent, classes.bigContent)}>\r\n                                            Admin adds the election, time and candidate list with their photo and bio.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid> \r\n                            <Grid container style={{paddingTop:'3%', paddingLeft:'5%', paddingRight:'5%'}}>\r\n                                <Grid container justifyContent=\"center\" alignItems=\"center\"  item sm={1} md={1} className={classes.avatarContainer}>\r\n                                    <Avatar alt=\"Remy Sharp\" className={classes.avatar}>\r\n                                        2\r\n                                    </Avatar>\r\n                                </Grid>\r\n                                <Grid container item sm={11} md={11}>\r\n                                    <Grid container justifyContent=\"left\">\r\n                                        <Typography variant=\"h5\" className={classNames(classes.optionTitle, classes.bigTitle)}>\r\n                                        \tManage Voter\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid container justifyContent=\"left\" >\r\n                                        <Typography variant=\"h6\" className={classNames(classes.optionContent, classes.bigContent)}>\r\n                                            Admin can add eligible voter to the system even remove the voter.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>               \r\n                             <Grid container container style={{paddingTop:'3%', paddingLeft:'5%', paddingRight:'5%'}}>\r\n                                <Grid container justifyContent=\"center\" alignItems=\"center\" item sm={1} md={1} className={classes.avatarContainer}>\r\n                                    <Avatar alt=\"Remy Sharp\" className={classes.avatar}>\r\n                                        3\r\n                                    </Avatar>\r\n                                </Grid>\r\n                                <Grid container item sm={11} md={11}>\r\n                                    <Grid container justifyContent=\"left\">\r\n                                        <Typography variant=\"h5\" className={classNames(classes.optionTitle, classes.bigTitle)}>\r\n                                            Participate in an election\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid container justifyContent=\"left\">\r\n                                        <Typography variant=\"h6\" className={classNames(classes.optionContent, classes.bigContent)}>\r\n                                        \tVoter registers to the system and should pass the biometric verification to login to the system.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>               \r\n                            <Grid container container style={{paddingTop:'3%', paddingLeft:'5%', paddingRight:'5%'}}>\r\n                                <Grid container justifyContent=\"center\" alignItems=\"center\" item sm={1} md={1} className={classes.avatarContainer}>\r\n                                    <Avatar alt=\"Remy Sharp\" className={classes.avatar}>\r\n                                        4\r\n                                    </Avatar>\r\n                                </Grid>\r\n                                <Grid container item sm={11} md={11}>\r\n                                    <Grid container justifyContent  =\"left\">\r\n                                        <Typography variant=\"h5\" className={classNames(classes.optionTitle, classes.bigTitle)}>\r\n                                            Free choice for candidates\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid container justifyContent=\"left\">\r\n                                        <Typography variant=\"h6\" className={classNames(classes.optionContent, classes.bigContent)}>\r\n                                        \tVoter chooses candidate of their choice and votes. They can immediately verify their ballot has been counted efficiently.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container container style={{paddingTop:'3%', paddingLeft:'5%', paddingRight:'5%'}}>\r\n                                <Grid container justifyContent=\"center\" alignItems=\"center\" item sm={1} md={1} className={classes.avatarContainer}>\r\n                                    <Avatar alt=\"Remy Sharp\" className={classes.avatar}>\r\n                                        5\r\n                                    </Avatar>\r\n                                </Grid>\r\n                                <Grid container item sm={11} md={11}>\r\n                                    <Grid container justifyContent  =\"left\">\r\n                                        <Typography variant=\"h5\" className={classNames(classes.optionTitle, classes.bigTitle)}>\r\n                                            Monitor Results\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid container justifyContent=\"left\">\r\n                                        <Typography variant=\"h6\" className={classNames(classes.optionContent, classes.bigContent)}>\r\n                                        \tImmediate result summary allows anyone with metamask wallet to view the result statistics ensuring ultimate transparency.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container justifyContent=\"center\">\r\n                                <Button className={classes.createButton} style={{marginTop:\"2vw\"}}  onClick={handleToElectionsPage}>\r\n                                        View Elections\r\n                                </Button>\r\n                            </Grid>                              \r\n                        </Grid>\r\n                        <Grid container justifyContent=\"center\" alignItems=\"center\" item md={4} className={classes.dashboardImg}>\r\n                            <img src=\"image/React Chart UI.png\" className={classes.mdHiden} style={{width:'130%'}}/>\r\n                        </Grid>                       \r\n                    </Grid>\r\n                    {/* <Grid container >\r\n                        <Grid container justifyContent=\"center\">\r\n                            <Typography variant=\"h4\" style={{paddingTop:'3%'}}>\r\n                                What customers are saying\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container justifyContent=\"center\">\r\n                            <Typography variant=\"h6\">\r\n                                Don't just take our word for it\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid> \r\n                    <Grid container justifyContent=\"center\">\r\n                        <Grid className={classes.quoteBox}>\r\n                            <p>Election Runner provides a clean, attractive and easy-to-use voter interface that runs well on all Internet-enabled devices that we&#039;ve tested. Their support system is unparalleled for the speedy, comprehensive and personal manner in which it is delivered. With a few test elections under our belt, we were totally sold.</p>\r\n                        </Grid>\r\n                        <Grid className={classes.quoteTail}>\r\n                        </Grid>\r\n                        <Grid style={{fontSize:18,paddingLeft:'5%', paddingRight:'5%'}} container justifyContent=\"center\">\r\n                            <b>Michael L.,</b> University of Florida\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justifyContent =\"center\">\r\n                        \r\n                        <Grid item md={6}  container justifyContent=\"center\">\r\n                            <Grid  container justifyContent=\"center\">\r\n                                <Grid className={classes.quoteBox}>\r\n                                    <p>I used this app for a union election for a mid sized law office with a very difficult to \r\n                                        please group of people. I found the app easy to use. The support team was excellent and \r\n                                        prompt. Would highly recommend as a low cost and simple way to hold an election</p>\r\n                                </Grid>\r\n                                <Grid className={classes.quoteTail}>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid style={{marginTop:\"1vw\", fontSize:18,paddingLeft:'5%', paddingRight:'5%'}} >\r\n                                <b>Michelle M.,</b> Legal aid buffalo attorney Union\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item md={6}  container justifyContent=\"center\">\r\n                            <Grid  container justifyContent=\"center\">\r\n                                <Grid className={classes.quoteBox}>\r\n                                    <p>I was so happy with my first transaction with Election Runner! I made a couple \r\n                                        of mistakes me their customer service dept was so nice and all about the \r\n                                        customer! Wouldn't even think of using anyone else! A+++</p>\r\n                                </Grid>\r\n                                <Grid className={classes.quoteTail}>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid style={{marginTop:\"1vw\", fontSize:18,paddingLeft:'5%', paddingRight:'5%'}}>\r\n                                <b>Elizabeth H.,</b> Quad Moms\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justifyContent=\"center\">\r\n                        <Grid className={classes.quoteBox}>\r\n                            <p>We did the impossible this year. We held online student council elections, reducing a three-day process to \r\n                                30 minutes. I was looking at an alternative platform but realised the day before that it was unworkable. \r\n                                I stumbled onto ElectionRunner and was not disappointed. \r\n                                It was easy to use and made the process exciting for all parties. I certainly recommend it.</p>\r\n                        </Grid>\r\n                        <Grid className={classes.quoteTail}>\r\n                        </Grid>\r\n                        <Grid style={{marginTop:\"1vw\", fontSize:18,paddingLeft:'5%', paddingRight:'5%'}}>\r\n                            <b>Ken D.</b> \r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justifyContent=\"center\">\r\n                        <Grid container justifyContent=\"center\">\r\n                            <Grid className={classes.quoteBox} style={{width:\"100vw\"}}>\r\n                            \r\n                                <p>It is the best online election platform I have ever seen. I really enjoyed working on it.</p>\r\n                            </Grid>\r\n                            <Grid className={classes.quoteTail}>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid style={{marginTop:\"1vw\", fontSize:18,paddingLeft:'5%', paddingRight:'5%'}}>\r\n                            <b>Olaleye T., </b>E-VOTING GROUP \r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justifyContent=\"center\">\r\n                        <Button className={classes.createButton} style={{backgroundColor:blue[500]}}>\r\n                            Read More Reviews\r\n                        </Button>\r\n                    </Grid> */}\r\n                     <Grid container justifyContent=\"center\"  className={classes.image}>\r\n                        <Grid container style={{backgroundColor:`rgba(70,0,120,0.7)`, color:\"#fff\",paddingBottom:\"20px\", paddingTop:\"50px\"}}>\r\n                            \r\n                            <Grid container justifyContent=\"center\" item md={8} >\r\n                                <Grid  container justifyContent=\"center\">\r\n                                    <Typography variant=\"h4\" className={classNames(classes.optionTitle, classes.bigTitle)}>\r\n                                        Start building your first election\r\n                                    </Typography>   \r\n                                </Grid>\r\n                                <Grid  container justifyContent=\"center\">\r\n                                    <Typography variant=\"h6\" className={classNames(classes.optionContent, classes.bigContent)}>\r\n                                        NEPALVOTES is the most powerful online voting software available. \r\n                                        Don't believe us? See for yourself.\r\n                                    </Typography>      \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container justifyContent=\"center\" alignItems=\"center\" item md={4}>\r\n                                <Button className={classes.createButton}>Get Started</Button>\r\n                            </Grid> \r\n                        \r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                    <AppBar position=\"static\" style={{backgroundColor:\"#001100\", marginBottom:\"0px\", padding:'2rem'}} elevation={1}>\r\n                        <Grid container style={{paddingLeft: '4vw', paddingRight: '4vw'}}>\r\n                            \r\n                            <Grid  item md={8} sm={12} xs={12} >\r\n                                <Grid item md={12} sm={12} xs={12}>\r\n                                    <Typography variant=\"body1\" className={classes.font18_14}>\r\n                                        Copyright © 2021 NEPALVOTES\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container  item md={12} sm={12} xs={12}>\r\n                                    <Grid>\r\n                                        <Typography variant=\"body1\" color=\"inherit\" className={classes.font18_14} >\r\n                                        NEPALVOTES is a product of Nepal Ethereum Marketing, LLC.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item md={4} sm={12}  xs={12} className={classes.font18_14}>\r\n                                <a>Terms of Service </a>\r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n                    </AppBar>\r\n                </Grid> \r\n            </React.Fragment>\r\n        </>\r\n    );\r\n}\r\nexport default HomePage;","export const contractAbi = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"NewElection\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"electionId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"electionName\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"vote\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"voteName\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"UserVoteEvent\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_addr\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"adminAddAdmin\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string[]\",\r\n\t\t\t\t\"name\": \"_options\",\r\n\t\t\t\t\"type\": \"string[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_json\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"adminAddElection\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_addr\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"adminAddVoter\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_addr\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"adminRemoveVoter\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_fee\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"adminSetVoteFee\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"admins\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"adminsList\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"electionInfo\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string[]\",\r\n\t\t\t\t\"name\": \"_options\",\r\n\t\t\t\t\"type\": \"string[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256[]\",\r\n\t\t\t\t\"name\": \"_optionVotes\",\r\n\t\t\t\t\"type\": \"uint256[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_total\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_json\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"elections\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"total\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"optionsCount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"json\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getAdmins\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address[]\",\r\n\t\t\t\t\"name\": \"_admins\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_addr\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getBalanceOfAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"lastAdminId\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"lastElectionId\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"lastVoterId\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"_addr\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_electionId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"userVote\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_vote\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_electionId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_vote\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"vote\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"voteFee\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"voters\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"receive\"\r\n\t}\r\n];","import React, {useState, useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { userActions } from \"../actions/user.action\";\r\nimport { alertActions } from \"../actions/alert.action\";\r\nimport { adminActions, adminInfo } from '../actions/admin.action';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {pageActions} from '../actions/pageInfo.action';\r\nimport Particles from './Particles';\r\n\r\n\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    Button,\r\n    Typography,\r\n    Divider,\r\n    Paper,\r\n    Snackbar\r\n\r\n} from '@material-ui/core'\r\nimport {contractAbi} from '../app/contractAbi';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport SettingsInputAntennaIcon from '@mui/icons-material/SettingsInputAntenna';\r\nimport getWeb3 from \"../getWeb3\";\r\n\r\nconst Alert=React.forwardRef(function Alert(props, ref){\r\n    return  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}/>\r\n  });\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        flexGrow:1,\r\n        // backgroundColor:\"#071722\",\r\n        backgroundImage: `url('./image/background.jpg')`,\r\n        height:'100vh',\r\n    },\r\n    paper: {\r\n      margin:'5%',\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      elevation:3,\r\n      width:\"100%\",\r\n      maxHeight:'40%',\r\n      \r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      padding:theme.spacing(0,0,8,0),\r\n    },\r\n    panel:{\r\n        // margin:theme.spacing(2,4,2,4),\r\n    },\r\n    button:{\r\n        backgroundColor:\"#00aa00\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#007700',\r\n        },\r\n        margin:theme.spacing(1,0,1,0),\r\n        width:\"98%\",\r\n    },\r\n    textField:{\r\n        margin:theme.spacing(1,0,1,0),\r\n    }\r\n\r\n}));\r\nexport default function AdminLoginPage(){\r\n    \r\n    const classes=useStyles();\r\n    const history =  useHistory();\r\n\r\n    const isAdmin = useSelector(state=>state.adminInfo.isAdmin);\r\n\r\n    const electionContractAddress=useSelector(state=>state.electionContractAddress);\r\n    const [electionContract, setElectionContract] = useState(null);\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n\r\n    const alertContent = useSelector(state=>state.alert);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n  \r\n    const checkMetaMask = async() =>{\r\n        try{\r\n            const web3 =await getWeb3();\r\n           \r\n            await web3.eth.requestAccounts();\r\n            \r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log('Accounts', accounts);\r\n           \r\n            if(accounts.length>0){\r\n               \r\n                setCurrentAccount(accounts[0]);\r\n            }\r\n            const contract = new web3.eth.Contract(contractAbi,electionContractAddress);\r\n            \r\n            setElectionContract(contract);\r\n            \r\n        } catch(error){\r\n            console.log(\"This is error\", error);\r\n            dispatch(alertActions.error(\"Can't found MetaMask. Please install MetaMask or unlock Metask.\"));\r\n            setOpen(true);\r\n        }\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        if(window.ethereum){\r\n            window.ethereum.on('chainChanged',()=>{\r\n                dispatch(adminActions.isAdmin(false));\r\n                history.push('/');\r\n\r\n            })\r\n            window.ethereum.on('accountsChanged',()=>{\r\n                dispatch(adminActions.isAdmin(false));\r\n                history.push('/');\r\n            })\r\n\r\n        }\r\n        dispatch(alertActions.clear());\r\n        dispatch(pageActions.setPageName('adminLogin'));\r\n        checkMetaMask();\r\n    },[]);\r\n\r\n    const handleClose=(event,reason)=>{\r\n        if(reason===\"clickaway\"){\r\n          return;\r\n        }\r\n        setOpen(false);\r\n      }\r\n    const handleSubmit = ()=>{\r\n       console.log('Remix Contract: ', electionContract);\r\n       console.log('currentAccount', currentAccount);\r\n        try{\r\n            \r\n            electionContract.methods.admins(currentAccount).call({\r\n                from:currentAccount\r\n            }).then(res=>{\r\n                console.log(res);\r\n                if(res){\r\n                    // alert('once Admin selected');\r\n                    dispatch(adminActions.isAdmin(true));\r\n                    localStorage.setItem('isAdmin', \"true\");\r\n                    history.push('/elections');\r\n                } else{\r\n                    \r\n                    dispatch(alertActions.error(\"You are not admin.\"));\r\n                    dispatch(adminActions.isAdmin(false));\r\n                    localStorage.setItem('isAdmin', \"flase\");\r\n                    setOpen(true);\r\n                }\r\n            }).catch(err=>{\r\n                alert('3');\r\n                dispatch(alertActions.error(\"Some errors occurred while authenticating your wallet2.\"));\r\n                setOpen(true);\r\n            })\r\n        } catch (err){\r\n            dispatch(alertActions.error(\"Some errors occurred while connecting your wallet1.\"));\r\n            setOpen(true);\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity={alertContent.type} sx={{width:'100%'}}>\r\n                    {alertContent.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n            <Grid component=\"main\" className={classes.root} container justifyContent=\"center\" alignItems=\"center\">\r\n                <Particles/>\r\n                <Grid container justifyContent=\"center\" item xs={12} sm={8} md={6}>\r\n                    <Paper className={classes.paper} marginLeft={{xs:1, sm:2}} \r\n                       elevation={24}>\r\n                        <CssBaseline/>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" style={{marginLeft:\"8vw\", paddingTop:\"2vw\", paddingBottom:\"2vh\"}}>\r\n                                Authentication of Admin\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Divider style={{width:\"100%\"}}/>\r\n                        <Grid container justifyContent=\"center\" item md={12} style={{width:\"60%\", paddingTop:\"20px\"}}>\r\n                            <form className={classes.form}>\r\n                                \r\n                                <Grid container>\r\n                                    <Grid container item md={12} justifyContent=\"center\"> \r\n                                        <Button \r\n                                            className={classes.button}  \r\n                                            startIcon={<SettingsInputAntennaIcon />}\r\n                                            onClick={handleSubmit}>\r\n                                            Connect Your Wallet     \r\n                                        </Button>\r\n                                    </Grid>\r\n                                    \r\n                                </Grid>\r\n                               \r\n                            </form>\r\n                        </Grid>\r\n                        \r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import React,{useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {alertActions} from '../../actions/alert.action';\r\nimport {userActions} from '../../actions/user.action';\r\nimport {styled} from '@mui/material/styles';\r\nimport http from '../../http.comon';\r\nimport {\r\n    Grid,\r\n    Box,\r\n    CssBaseline,\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    Divider,\r\n    Paper,\r\n    Modal,\r\n    Backdrop,\r\n    Fade,\r\n    TextareaAutosize,\r\n    IconButton,\r\n    Snackbar\r\n    \r\n} from '@material-ui/core'\r\nimport Chip from '@mui/material/Chip';\r\nimport {\r\n     MonetizationOn,\r\n     Contacts,\r\n     Add\r\n} from '@material-ui/icons';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport BackupIcon from '@mui/icons-material/Backup';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport isEmpty from \"is-empty\";\r\nimport getWeb3 from '../../getWeb3';\r\nimport {contractAbi} from '../../app/contractAbi';\r\nimport AppsIcon from '@mui/icons-material/Apps';\r\nimport { pageActions } from \"../../actions/pageInfo.action\";\r\nimport moment from 'moment';\r\n\r\nconst ListItem = styled('li')(({theme})=>({\r\n    margin:theme.spacing(0.5),\r\n    listStyle:'none',\r\n}));\r\n\r\nconst Alert=React.forwardRef(function Alert(props, ref){\r\n    return  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}/>\r\n  });\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        flexGrow:1,\r\n        backgroundColor:\"transparent\",\r\n        height:\"100vh\",\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(1),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      elevation:3,\r\n      width:\"100%\",\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      padding:theme.spacing(0,0,10,0),\r\n    },\r\n    panel:{\r\n        // margin:theme.spacing(2,4,2,4),\r\n    },\r\n    button:{\r\n        backgroundColor:\"#00aa00\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#007700',\r\n        },\r\n        \r\n        width:\"90%\",\r\n        height:\"80%\",\r\n        borderRadius:\"2em\",\r\n    },\r\n    textField:{\r\n        margin:theme.spacing(1,0,1,0),\r\n    },\r\n    iconBtn:{\r\n        backgroundColor:\"#00aa00\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#007700',\r\n        },\r\n        \r\n        // width:\"90%\",\r\n        marginTop:\"1vh\",\r\n        marginBottom:\"1vh\",\r\n    },\r\n    linkBtn:{\r\n        backgroundColor: 'transparent', \r\n        textTransform:\"none\",\r\n        textDecoration:\"true\",\r\n        fontSize:28, \r\n        color:\"#0000ff\",\r\n        '&:hover': {\r\n            color:\"#ff0000\",\r\n        },\r\n        textDecoration:\"true\",\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: \"60%\",\r\n    \r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    borderRadius:\"0.5em\",\r\n    p: 4,\r\n  };\r\nexport default function AddNewElection(){\r\n    const classes=useStyles();\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [dlgOpen, setDlgOpen] = useState(false);\r\n    const [avatar, setAvatar] = useState('');\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [linkOpen, setLinkOpen] = useState(false);\r\n    const [txhash, setTxhash] = useState('');\r\n    const [inputs, setInputs] = useState({\r\n        candidateName:'',\r\n        description:''\r\n    })\r\n\r\n    const [candidateList, setCandidateList] = useState([]);\r\n    const [electionName, setElectionName] = useState('');\r\n    let [avatarFile, setAvatarFile] = useState('');\r\n    \r\n    const {candidateName, description}=inputs;\r\n    \r\n    const alertContent = useSelector(state=>state.alert);\r\n    const dispatch = useDispatch();\r\n\r\n    const electionContractAddress=useSelector(state=>state.electionContractAddress);\r\n    const [electionContract, setElectionContract] = useState(null);\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n    const [balance, setBalance] = useState('');\r\n    \r\n    const getBalance=async()=>{\r\n        const web3 = await getWeb3();\r\n        web3.eth.getBalance(currentAccount, function(error, result){\r\n            if(result){\r\n                setBalance( web3.utils.fromWei(result, 'ether'));\r\n            }\r\n        })\r\n    }\r\n    const checkMetaMask = async() =>{\r\n        try{\r\n            const web3 =await getWeb3();\r\n           \r\n            await web3.eth.requestAccounts();\r\n            \r\n            const accounts = await web3.eth.getAccounts();\r\n            \r\n            if(accounts.length>0){\r\n               \r\n                setCurrentAccount(accounts[0]);\r\n                web3.eth.getBalance(accounts[0], function(error, result){\r\n                    if(result){\r\n                        setBalance( web3.utils.fromWei(result, 'ether'));\r\n                    }\r\n                })\r\n            }\r\n            const contract = new web3.eth.Contract(contractAbi,electionContractAddress);\r\n            \r\n            setElectionContract(contract);\r\n            \r\n        } catch(error){\r\n            dispatch(alertActions.error(\"Can't found MetaMask. Please install MetaMask.\"));\r\n            setAlertOpen(true);\r\n        }\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        dispatch(alertActions.clear());\r\n        dispatch(pageActions.setPageName('elections'));\r\n        checkMetaMask();\r\n        // getBalance();\r\n    },[]);\r\n\r\n    const handleCandidateChange=(e)=>{\r\n        const {name, value} = e.target;\r\n        setInputs({...inputs, [name]:value});\r\n    }\r\n    const handleCandidateDlgOpen=()=>{\r\n        setDlgOpen(true);\r\n        setLinkOpen(false);\r\n        setTxhash('');\r\n    }\r\n    const handleClose=()=>{\r\n        setDlgOpen(false);\r\n    }\r\n    const handleImageUpload=(e)=>{\r\n        const file = e.target.files[0];\r\n        let base64String = '';\r\n        const reader=new FileReader();\r\n\r\n        reader.onload = function () {\r\n            base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\r\n        \r\n          }\r\n        reader.readAsDataURL(file);\r\n        \r\n        setTimeout(function() {\r\n            setAvatarFile(base64String);\r\n          }, 1000);\r\n        setAvatar(file.name);\r\n    }\r\n    const handleAlertClose=(event,reason)=>{\r\n        if(reason===\"clickaway\"){\r\n          return;\r\n        }\r\n        setAlertOpen(false);\r\n    }\r\n    const handleToEtherscan=()=>{\r\n        window.open(\"https://ropsten.etherscan.io/tx/\");\r\n    }\r\n    const handleAddElection=()=>{\r\n        \r\n        if(!electionName || !startDate || !endDate || candidateList.length==0){\r\n            dispatch(alertActions.error(\"You should complete the form!\"));\r\n            setAlertOpen(true);\r\n           \r\n        } else{\r\n            let st = moment(startDate).unix();\r\n            let en = moment(endDate).unix();\r\n\r\n            const dateJSON={\r\n                startDate:st,\r\n                endDate:en\r\n            }\r\n            try{\r\n                http.post('/auth/user/upload-image', {candidateList:candidateList})\r\n                .then(res=>{\r\n                    const _candidateList = res.data.candidateList;\r\n                    console.log('This is start of add election event');\r\n                    console.log(electionName);\r\n                    console.log(_candidateList.map(JSON.stringify));\r\n                    console.log(JSON.stringify(dateJSON));\r\n                    // console.log(_candidateList);\r\n\r\n                    setTimeout(function() {\r\n                        // alert(currentAccount);\r\n                        electionContract.methods.adminAddElection(\r\n                            electionName, \r\n                            _candidateList.map(JSON.stringify), \r\n                            JSON.stringify(dateJSON)\r\n                            ).send({\r\n                                from:currentAccount\r\n                            }).on('transactionHash', function(hash){\r\n                                console.log('This is hash : ', hash);\r\n                                setElectionName('');\r\n                                setStartDate(null);\r\n                                setEndDate(null);\r\n                                setCandidateList([]);\r\n                                setTxhash(hash);\r\n                            })\r\n                            .on('receipt', function(receipt){\r\n                                console.log('receipt okay');\r\n                                dispatch(alertActions.success(\"Your transaction to add a new bounty is approved.\"));\r\n                                setAlertOpen(true);\r\n                                setLinkOpen(true);\r\n                                getBalance();\r\n                            })\r\n                            .on('error', function(error, receipt) {\r\n                                dispatch(alertActions.error(\"Something wrong with this transaction!\"));\r\n                                setAlertOpen(true);\r\n                            });\r\n                    }, 1000);\r\n                }, error=>{\r\n                    try{\r\n                        dispatch(alertActions.error(error.response.data));\r\n                    } catch(err){\r\n                        dispatch(alertActions.error('Some errors occurred while registering candidate...'));\r\n                    }\r\n                   \r\n                    setAlertOpen(true);\r\n                })\r\n            } catch(error){\r\n                dispatch(alertActions.error('Some errors occurred while registering candidate...'))\r\n                setAlertOpen(true);\r\n            }\r\n            \r\n\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const handleCandidateSubmit=()=>{\r\n        if(candidateName && description && avatarFile!=''){\r\n            \r\n            const newCandidate={\r\n                description: description,\r\n                name: candidateName,\r\n                avatarBase64: avatarFile\r\n            }\r\n            setCandidateList(candidateList=>[...candidateList, newCandidate]);\r\n            setAvatar('');\r\n            setInputs({ candidateName:'',description:''});\r\n\r\n            setDlgOpen(false);\r\n        } else{\r\n            dispatch(alertActions.error(\"Please fill the form.\"));\r\n            setAlertOpen(true);\r\n        }\r\n    };\r\n    const handleELectionNameChange=(e)=>{\r\n        setElectionName(e.target.value);\r\n        setLinkOpen(false);\r\n        setTxhash('');\r\n    }\r\n    const handleDelete = (chipToDelete) => () => {\r\n        \r\n        setCandidateList((candidateList) => candidateList.filter((chip) => chip.name !== chipToDelete.name));\r\n    };\r\n    return(\r\n        <>\r\n             {\r\n               \r\n              <Snackbar open={!isEmpty(alertContent) && alertOpen} autoHideDuration={6000} onClose={handleAlertClose}>\r\n                  <Alert onClose={handleAlertClose} severity={alertContent.type} sx={{width:'100%'}}>\r\n                  {alertContent.message}\r\n                  </Alert>\r\n              </Snackbar>\r\n             }\r\n            <Grid component=\"main\" className={classes.root} style={{margin:'3%'}}>\r\n                <Grid container>\r\n                     <Grid container item md={6} justifyContent=\"center\" >\r\n                       <Paper className={classes.paper} style={{ borderRadius:\"0.35em\", paddingTop:\"10px\", paddingBottom:\"10px\"}} elevation={16}>\r\n                            <Grid  container alignItems=\"center\" item >\r\n                                <Grid>\r\n                                    <Box style={{backgroundColor:\"#007fff\", width:\"80px\", height:\"80px\",marginLeft:\"10px\"}}>\r\n                                        <Contacts  style={{marginTop:\"15px\", marginLeft:\"15px\", fontSize:50}}/>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid style={{paddingLeft:\"1vw\", textOverflow:'hidden'}}>\r\n                                    <Grid>\r\n                                        <Typography variant=\"h6\" >\r\n                                            Your Address:\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid style={{textOverflowX:'hidden'}}>\r\n                                        <Typography \r\n                                            variant=\"body2\" \r\n                                            color=\"primary\" \r\n                                            style={{\r\n                                                width:'200px', \r\n                                                overflowX:'hidden', \r\n                                                textOverflow:'ellipsis'}}>\r\n                                            {currentAccount} \r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>{/* */}\r\n                    </Grid> \r\n                    <Grid container item md={6} justifyContent=\"center\" >\r\n                       <Paper className={classes.paper} style={{ borderRadius:\"0.35em\", paddingTop:\"10px\", paddingBottom:\"10px\"}} elevation={16}>\r\n                            <Grid  container alignItems=\"center\" item >\r\n                                <Grid>\r\n                                    <Box style={{backgroundColor:\"#007fff\", width:\"80px\", height:\"80px\",marginLeft:\"10px\"}}>\r\n                                        <MonetizationOn  style={{marginTop:\"15px\", marginLeft:\"15px\", fontSize:50}}/>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid style={{paddingLeft:\"1vw\", }}>\r\n                                    <Grid>\r\n                                        <Typography variant=\"h6\" >\r\n                                            Your Balance:\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid >\r\n                                        <Typography variant=\"body2\" color=\"primary\" >\r\n                                            {balance} \r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>{/* */}\r\n                    </Grid> \r\n                </Grid>\r\n                <Grid container>\r\n                    {\r\n                        linkOpen &&\r\n                        <Paper className={classes.paper} \r\n                        elevation={24} >\r\n                            <Grid container alignItems=\"center\">\r\n                                <AppsIcon style={{fontSize:48, color:\"#aa0000\", marginLeft:\"2vw\"}}/>\r\n                                <Typography variant=\"h5\" style={{marginLeft:\"1vw\", paddingTop:\"1vw\", paddingBottom:\"1vw\"}}>\r\n                                    Click <Button className={classes.linkBtn} style={{ backgroundColor: 'transparent' }} onClick={handleToEtherscan}>here</Button> to see the details of the transaction in etherscan.\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Paper>\r\n                    }\r\n                </Grid>\r\n                <Grid container>\r\n                    <Paper className={classes.paper} \r\n                       elevation={24}>\r\n                        <CssBaseline/>\r\n                        <Grid container >\r\n                            <Typography variant=\"h5\" style={{marginLeft:\"12vw\", paddingTop:\"2vw\"}}>\r\n                                Add New Election\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Divider  style={{width:\"100%\"}}/>\r\n                        <Grid container justifyContent=\"center\"  item md={12} style={{width:\"70%\"}}>\r\n                            <form className={classes.form}>\r\n                                <Grid container >\r\n                                    <Grid container justifyContent=\"center\"item md={6} style={{padding:\"1vw\",}}>\r\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                            <DateTimePicker\r\n                                                renderInput={(props) => <TextField {...props} />}\r\n                                                label=\"Start Date\"\r\n                                                value={startDate}\r\n                                                inputFormat=\"MM/dd/yyyy hh:mm a\"\r\n                                                onChange={(newValue) => {\r\n                                                setStartDate(newValue);\r\n                                                }}\r\n                                                style={{width:\"100vw\"}} \r\n                                            />\r\n                                    \r\n                                        </LocalizationProvider>\r\n                                    </Grid>\r\n                                    <Grid container justifyContent=\"center\" item md={6} style={{padding:\"1vw\"}}>\r\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                            <DateTimePicker\r\n                                                renderInput={(props) => <TextField {...props} />}\r\n                                                label=\"End Date\"\r\n                                                value={endDate}\r\n                                                \r\n                                                inputFormat=\"MM/dd/yyyy hh:mm a\"\r\n                                                valueDefault={null}\r\n                                                onChange={(newValue) => {\r\n                                                setEndDate(newValue);\r\n                                                }}\r\n                                            />\r\n                                    \r\n                                        </LocalizationProvider>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container>\r\n                                    <Grid  container justifyContent=\"center\" item md={4}>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            label=\"Name\"\r\n                                            required\r\n                                            fullWidth\r\n                                            value={electionName}\r\n                                            className={classes.textField}\r\n                                            onChange={handleELectionNameChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid container item md={4} justifyContent=\"center\" alignItems=\"center\"> \r\n                                        <Button className={classes.button} startIcon={<Add />} onClick={handleCandidateDlgOpen}>\r\n                                            Add Candidate    \r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid container item md={4} justifyContent=\"center\" alignItems=\"center\">\r\n                                        <Button className={classes.button} startIcon={<Add />} onClick={handleAddElection}>\r\n                                            Add New Election\r\n                                        </Button>\r\n                                    </Grid>\r\n                                   \r\n                                </Grid>\r\n                                <Grid container component=\"ul\" >\r\n                                    {candidateList.map((data,key) => {\r\n                                       \r\n                                        return (\r\n                                        <ListItem key={key}>\r\n                                            <Chip\r\n                                            color=\"primary\"\r\n                                            label={data.name}\r\n                                            onDelete={handleDelete(data)}\r\n                                            \r\n                                           />\r\n                                        </ListItem>\r\n                                        );\r\n                                    })}\r\n                                </Grid>\r\n                                                \r\n                            </form>\r\n                        </Grid>\r\n                        \r\n                    </Paper>\r\n                </Grid>\r\n                \r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    open={dlgOpen}\r\n                    onClose={handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                   \r\n                >\r\n                    <Fade in={dlgOpen}>\r\n                    <Box sx={style}>\r\n                        <Grid>\r\n                            <Grid>\r\n                                <Typography>New Candidate</Typography>\r\n                                <Divider/>\r\n                            </Grid>\r\n                            <Grid container style={{width:\"100%\"}} justifyContent=\"center\">\r\n                                <Grid container justifyContent=\"center\" item md={6} style={{marginTop:\"2vh\"}}>\r\n                                    <TextField \r\n                                    variant=\"outlined\" \r\n                                    label=\"Name\" \r\n                                    style={{width:\"98%\"}}\r\n                                    name=\"candidateName\"\r\n                                    value={candidateName}\r\n                                    onChange={handleCandidateChange}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid container justifyContent=\"center\" item md={6} style={{marginTop:\"2vh\"}}>\r\n                                    <Grid container justifyContent=\"center\" item md={10} >\r\n                                        <TextField \r\n                                        variant=\"outlined\" \r\n                                        value={avatar} \r\n                                        label=\"Avata URL\" \r\n                                        style={{width:\"98%\"}}/>\r\n                                    </Grid>\r\n                                     <Grid container justifyContent=\"center\" item md={2}>\r\n                                        <IconButton\r\n                                            variant=\"contained\"\r\n                                            component=\"label\"\r\n                                            className={classes.iconBtn}>\r\n                                            <BackupIcon/>\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                hidden\r\n                                                onChange={handleImageUpload}\r\n                                            />\r\n                                            </IconButton>\r\n                                        \r\n                                    </Grid>\r\n                                    \r\n                                </Grid>\r\n                               \r\n                                \r\n                            </Grid>\r\n                            <Grid style={{marginTop:\"2vh\"}}>\r\n                                <Typography>Description</Typography>\r\n                                <Divider/>\r\n                            </Grid>\r\n                            <Grid container justifyContent=\"center\" style={{marginTop:\"2vh\", width:\"100%\"}}>\r\n                                \r\n                                <TextareaAutosize\r\n                                    maxRows={4}\r\n                                    aria-label=\"maximum height\"\r\n                                    placeholder=\"Please input your descriptions.\"\r\n                                    style={{width:\"99%\", minHeight:\"20vh\"}}\r\n                                    name=\"description\"\r\n                                    value={description}\r\n                                    onChange={handleCandidateChange}\r\n                                    />\r\n                            </Grid>\r\n                            <Grid container style={{marginTop:\"2vh\"}}>\r\n                                <Typography style={{flexGrow:1}}/>\r\n                                <Button className={classes.button} style={{width:\"20vw\"}} onClick={handleCandidateSubmit}>Save Candidate</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                    </Box>\r\n                    </Fade>\r\n                </Modal>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import React,{useState, useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Grid,\r\n    Box,\r\n    CssBaseline,\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    Divider,\r\n    Paper,\r\n    Snackbar\r\n\r\n} from '@material-ui/core'\r\n\r\nimport MuiAlert from '@mui/lab/Alert';\r\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\r\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\r\nimport getWeb3 from \"../../getWeb3\";\r\nimport { contractAbi } from \"../../app/contractAbi\";\r\nimport { alertActions } from \"../../actions/alert.action\";\r\nimport isEmpty from \"is-empty\";\r\nimport {pageActions} from '../../actions/pageInfo.action';\r\n\r\nconst Alert=React.forwardRef(function Alert(props, ref){\r\n    return  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}/>\r\n  });\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        flexGrow:1,\r\n        backgroundColor:\"transparent\"\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(12),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      elevation:3,\r\n      width:\"70%\",\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      padding:theme.spacing(0,0,8,0),\r\n    },\r\n    panel:{\r\n        // margin:theme.spacing(2,4,2,4),\r\n    },\r\n    button:{\r\n        backgroundColor:\"#00aa00\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#007700',\r\n        },\r\n        margin:theme.spacing(1,0,1,0),\r\n        width:\"98%\",\r\n    },\r\n    textField:{\r\n        margin:theme.spacing(1,0,1,0),\r\n    }\r\n\r\n}));\r\nexport default function AddNewAdmin(){\r\n    const classes=useStyles();\r\n    const alertContent = useSelector(state=>state.alert);\r\n    const dispatch = useDispatch();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const electionContractAddress=useSelector(state=>state.electionContractAddress);\r\n    const [electionContract, setElectionContract] = useState(null);\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n    const [adminAddress, setAdminAddress] = useState('');\r\n\r\n    useEffect(()=>{\r\n        dispatch(alertActions.clear());\r\n        dispatch(pageActions.setPageName('elections'));\r\n        checkMetaMask();\r\n    },[]);\r\n    const checkMetaMask = async() =>{\r\n        try{\r\n            const web3 =await getWeb3();\r\n        \r\n            await web3.eth.requestAccounts();\r\n            \r\n            const accounts = await web3.eth.getAccounts();\r\n            \r\n            if(accounts.length>0){\r\n            \r\n                setCurrentAccount(accounts[0]);\r\n            }\r\n            const contract = new web3.eth.Contract(contractAbi,electionContractAddress);\r\n            \r\n            setElectionContract(contract);\r\n            \r\n        } catch(error){\r\n            dispatch(alertActions.error(\"Can't found MetaMask. Please install MetaMask or unlock Metask.\"));\r\n            setAlertOpen(true);\r\n        }\r\n        \r\n    }\r\n    const handleAlertClose=(event,reason)=>{\r\n        if(reason===\"clickaway\"){\r\n            return;\r\n        }\r\n\r\n        setAlertOpen(false);\r\n    }\r\n    const handleAddNewAdmin=()=>{\r\n        if(!adminAddress){\r\n            dispatch(alertActions.error(\"Please input address\"));\r\n            setAlertOpen(true);\r\n            return;\r\n        }\r\n        try{\r\n            electionContract.methods.adminAddAdmin(adminAddress).send({\r\n                from: currentAccount\r\n            })\r\n            .on('transactionHash', function(hash){\r\n                // $('#addSpinner').removeClass('d-block').addClass('d-none');\r\n            })\r\n            .on('receipt', function(receipt){\r\n                dispatch(alertActions.success(\"Your transaction to add a new voter is approved.\"));\r\n                setAlertOpen(true);\r\n                setAdminAddress('');\r\n            })\r\n            .on('error', function(error, receipt) {\r\n                dispatch(alertActions.error(\"Some thing wrong with this transaction!\"));\r\n                setAlertOpen(true);\r\n            });\r\n        } catch(err){\r\n            dispatch(alertActions.error(\"Invalid address or some thing wrong with this transaction!\"));\r\n            setAlertOpen(true);\r\n        }\r\n    }\r\n    const handleAdminAddressChange=(e)=>{\r\n        const value=e.target.value;\r\n        setAdminAddress(value);\r\n    }\r\n    return(\r\n        <>\r\n            {\r\n                <Snackbar open={!isEmpty(alertContent) && alertOpen} autoHideDuration={6000} onClose={handleAlertClose}>\r\n                    <Alert onClose={handleAlertClose} severity={alertContent.type} sx={{width:'100%'}}>\r\n                    {alertContent.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n            <Grid component=\"main\" className={classes.root}>\r\n               \r\n                <Grid container justifyContent=\"center\">\r\n                    <Paper className={classes.paper} \r\n                       elevation={24}>\r\n                        <CssBaseline/>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" style={{marginLeft:\"8vw\", paddingTop:\"2vw\", paddingBottom:\"2vh\"}}>\r\n                                Add New Admin\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Divider style={{width:\"100%\"}}/>\r\n                        <Grid container justifyContent=\"center\" item md={12} style={{width:\"70%\", paddingTop:\"20px\"}}>\r\n                            <form className={classes.form}>\r\n                                \r\n                                <Grid container>\r\n                                    <Grid  container justifyContent=\"center\" >\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            label=\"Address\"\r\n                                            required\r\n                                            fullWidth\r\n                                            className={classes.textField}\r\n                                            value={adminAddress}\r\n                                            onChange={handleAdminAddressChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    \r\n                                </Grid>\r\n                                <Grid container>\r\n                                    <Grid container item md={12} justifyContent=\"center\"> \r\n                                        <Button \r\n                                            className={classes.button}  \r\n                                            startIcon={<PersonAddAlt1Icon />} \r\n                                            onClick={handleAddNewAdmin}>\r\n                                            Add     \r\n                                        </Button>\r\n                                    </Grid>\r\n                                    \r\n                                </Grid>\r\n                               \r\n                            </form>\r\n                        </Grid>\r\n                        \r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","\r\nexport const selectionActions={\r\n    setSelectedItem,\r\n    clear\r\n}\r\nfunction setSelectedItem(item){\r\n    localStorage.setItem('selectedItem', JSON.stringify(item));\r\n    return {type:'selected', item};\r\n}\r\nfunction clear(){\r\n    localStorage.removeItem('selectedItem');\r\n    return {type:'cancelSeleted'};\r\n}","import React,{useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TextField from '@mui/material/TextField';\r\nimport isEmpty from 'is-empty';\r\nimport {\r\n  DataGrid,\r\n  GridToolbarDensitySelector,\r\n  GridToolbarFilterButton,\r\n  GridToolbarExport\r\n} from '@mui/x-data-grid';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport {\r\n  Paper,\r\n  Snackbar\r\n} from '@mui/material'\r\nimport MuiAlert from '@mui/lab/Alert';\r\nimport getWeb3 from '../../getWeb3';\r\nimport {contractAbi} from '../../app/contractAbi';\r\nimport {alertActions} from '../../actions/alert.action';\r\nimport { pageActions } from '../../actions/pageInfo.action';\r\nimport {selectionActions} from '../../actions/selection.action';\r\n\r\n\r\nconst Alert=React.forwardRef(function Alert(props, ref){\r\n  return  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}/>\r\n});\r\n\r\nfunction escapeRegExp(value) {\r\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n\r\nconst defaultTheme = createTheme();\r\nconst useStyles = makeStyles(\r\n  (theme) =>\r\n    createStyles({\r\n      root: {\r\n        padding: theme.spacing(0.5, 0.5, 0),\r\n        justifyContent: 'space-between',\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        flexWrap: 'wrap',\r\n      },\r\n      textField: {\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: '100%',\r\n        },\r\n        margin: theme.spacing(1, 0.5, 1.5),\r\n        '& .MuiSvgIcon-root': {\r\n          marginRight: theme.spacing(0.5),\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n          borderBottom: `1px solid ${theme.palette.divider}`,\r\n        },\r\n      },\r\n      paper: {\r\n        margin: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        elevation:3,\r\n        width:\"100%\",\r\n      },\r\n    }),\r\n  { defaultTheme },\r\n);\r\n\r\nfunction QuickSearchToolbar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <GridToolbarFilterButton />\r\n        <GridToolbarDensitySelector />\r\n        <GridToolbarExport/>\r\n      </div>\r\n      <TextField\r\n        variant=\"standard\"\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        placeholder=\"Search…\"\r\n        className={classes.textField}\r\n        InputProps={{\r\n          startAdornment: <SearchIcon fontSize=\"small\" />,\r\n          endAdornment: (\r\n            <IconButton\r\n              title=\"Clear\"\r\n              aria-label=\"Clear\"\r\n              size=\"small\"\r\n              style={{ visibility: props.value ? 'visible' : 'hidden' }}\r\n              onClick={props.clearSearch}\r\n            >\r\n              <ClearIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nQuickSearchToolbar.propTypes = {\r\n  clearSearch: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst fakeRows= [\r\n  {id:1,name:'aaa'},\r\n  {id:2,name:'bbb'},\r\n  {id:3,name:'cccc'},\r\n  {id:4,name:'ddd'},\r\n  {id:5,name:'eee'},\r\n  {id:6,name:'fff'},\r\n  {id:7,name:'ggg'}\r\n]\r\nexport default function Elections() {\r\n  const alertContent = useSelector(state=>state.alert);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [data, setData] = useState({\r\n    rows:[\r\n      \r\n    ],\r\n    columns:[\r\n      {field:'id',width:150},\r\n      {field:'name', width:150},\r\n     \r\n    ]\r\n  })\r\n \r\n  const [rows, setRows] = useState([]);\r\n  const [searchText, setSearchText] = React.useState('');\r\n\r\n  const electionContractAddress=useSelector(state=>state.electionContractAddress);\r\n  const [electionContract, setElectionContract] = useState(null);\r\n  const [currentAccount, setCurrentAccount] = useState('');\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n  const handleAlertClose=(event,reason)=>{\r\n    if(reason===\"clickaway\"){\r\n      return;\r\n    }\r\n    setAlertOpen(false);\r\n }\r\n const handleSelectionChange=(id)=>{\r\n   let selectedName='';\r\n   console.log(data);\r\n   data.rows.map((row)=>{\r\n      // alert('same');\r\n    if(row.id==id){\r\n      selectedName=row.name;\r\n    }\r\n   });\r\n\r\n   const selectedItem={\r\n     selectedId:id,\r\n     selectedName:selectedName\r\n   }\r\n   dispatch(selectionActions.setSelectedItem(selectedItem));\r\n   history.push('/elections/election-vote');\r\n }\r\n  const checkMetaMask = async() =>{\r\n    try{\r\n        const web3 =await getWeb3();\r\n       \r\n        await web3.eth.requestAccounts();\r\n        \r\n        const accounts = await web3.eth.getAccounts();\r\n        \r\n        if(accounts.length>0){\r\n           \r\n            setCurrentAccount(accounts[0]);\r\n            \r\n            const contract = new web3.eth.Contract(contractAbi,electionContractAddress);\r\n            contract.getPastEvents('NewElection',{fromBlock:0,toBlock:'latest'})\r\n                    .then(events=>{\r\n                      const elections = [];\r\n                      events.forEach(element=>{\r\n                        elections.push({\r\n                          id:element.returnValues.id,\r\n                          name:element.returnValues.name\r\n                        })\r\n                      })\r\n                      setData(data=>({...data,rows:elections}));\r\n                      setRows(elections);\r\n                    })\r\n                    \r\n             setElectionContract(contract);\r\n             \r\n        }\r\n        /**mock part \r\n        setData(data=>({...data,rows:fakeRows}));\r\n        setRows(fakeRows);*/\r\n\r\n        \r\n    } catch(error){\r\n        dispatch(alertActions.error(\"Can't found MetaMask. Please install MetaMask or unlock Metask.\"));\r\n        setAlertOpen(true);\r\n    }\r\n    \r\n}\r\n  const requestSearch = (searchValue) => {\r\n    setSearchText(searchValue);\r\n    const searchRegex = new RegExp(escapeRegExp(searchValue), 'i');\r\n    const filteredRows = data.rows.filter((row) => {\r\n      return Object.keys(row).some((field) => {\r\n        return searchRegex.test(row[field].toString());\r\n      });\r\n    });\r\n   \r\n    setRows(filteredRows);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(pageActions.setPageName('elections'));\r\n    checkMetaMask();\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        {\r\n          \r\n          <Snackbar open={!isEmpty(alertContent) && alertOpen} autoHideDuration={6000} onClose={handleAlertClose}>\r\n              <Alert onClose={handleAlertClose} severity={alertContent.type} sx={{width:'100%'}}>\r\n              {alertContent.message}\r\n              </Alert>\r\n          </Snackbar>\r\n        }\r\n        \r\n        <Paper style={{ height: '70vh', width: '80%', margin:'5%'}} elevation={24}>\r\n          <DataGrid\r\n            onSelectionModelChange={(newSelectionModel)=>{\r\n              handleSelectionChange(newSelectionModel[0]);\r\n            }}\r\n            components={{ Toolbar: QuickSearchToolbar }}\r\n            rows={rows}\r\n            columns={data.columns}\r\n            componentsProps={{\r\n              toolbar: {\r\n                value: searchText,\r\n                onChange: (event) => requestSearch(event.target.value),\r\n                clearSearch: () => requestSearch(''),\r\n              },\r\n            }}\r\n          />\r\n        </Paper>\r\n      </>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React,{useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nimport isEmpty from 'is-empty';\r\nimport {\r\n  DataGrid,\r\n  GridToolbarDensitySelector,\r\n  GridToolbarFilterButton,\r\n  GridToolbarExport\r\n} from '@mui/x-data-grid';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\nimport {\r\n  Paper,\r\n  Snackbar\r\n} from '@mui/material'\r\nimport MuiAlert from '@mui/lab/Alert';\r\nimport getWeb3 from '../../getWeb3';\r\nimport {contractAbi} from '../../app/contractAbi';\r\nimport {alertActions} from '../../actions/alert.action';\r\nimport { userActions } from '../../actions/user.action';\r\nimport { pageActions } from '../../actions/pageInfo.action';\r\nimport {selectionActions} from '../../actions/selection.action';\r\n\r\nimport TelegramIcon from '@mui/icons-material/Telegram';\r\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\r\n\r\n\r\n\r\nconst Alert=React.forwardRef(function Alert(props, ref){\r\n  return  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}/>\r\n});\r\n\r\nfunction escapeRegExp(value) {\r\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n\r\nconst defaultTheme = createTheme();\r\nconst useStyles = makeStyles(\r\n  (theme) =>\r\n    createStyles({\r\n      root: {\r\n        padding: theme.spacing(0.5, 0.5, 0),\r\n        justifyContent: 'space-between',\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        flexWrap: 'wrap',\r\n      },\r\n      textField: {\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: '100%',\r\n        },\r\n        margin: theme.spacing(1, 0.5, 1.5),\r\n        '& .MuiSvgIcon-root': {\r\n          marginRight: theme.spacing(0.5),\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n          borderBottom: `1px solid ${theme.palette.divider}`,\r\n        },\r\n      },\r\n      paper: {\r\n        margin: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        elevation:3,\r\n        width:\"100%\",\r\n      },\r\n      button:{\r\n        backgroundColor:\"#00aa00  !important \",\r\n        color:\"#fff  !important\",\r\n        '&:hover': {\r\n            backgroundColor: '#007700  !important',\r\n        },\r\n        margin:theme.spacing(1,0,1,0),\r\n        width:\"98%\",\r\n      }\r\n    }),\r\n  { defaultTheme },\r\n);\r\n\r\nfunction QuickSearchToolbar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <GridToolbarFilterButton />\r\n        <GridToolbarDensitySelector />\r\n        <GridToolbarExport/>\r\n      </div>\r\n      <TextField\r\n        variant=\"standard\"\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        placeholder=\"Search…\"\r\n        className={classes.textField}\r\n        InputProps={{\r\n          startAdornment: <SearchIcon fontSize=\"small\" />,\r\n          endAdornment: (\r\n            <IconButton\r\n              title=\"Clear\"\r\n              aria-label=\"Clear\"\r\n              size=\"small\"\r\n              style={{ visibility: props.value ? 'visible' : 'hidden' }}\r\n              onClick={props.clearSearch}\r\n            >\r\n              <ClearIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nQuickSearchToolbar.propTypes = {\r\n  clearSearch: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst modalStyle = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 800,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function Elections() {\r\n  const classes=useStyles();\r\n  const alertContent = useSelector(state=>state.alert);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [columns, setColumns] = useState([\r\n    {field:'no',width:100, headerName: 'No.'},\r\n    {field:'username', width:150, headerName: 'User Name'},\r\n    {field:'name', width:200, headerName: 'Full Name'},\r\n    {field:'email', width:200, headerName: 'Email'},\r\n    {field:'address', width:150, headerName: 'Address'},\r\n    {field:'phone', width:150, headerName: 'Phone'},\r\n    {field:'walletaccount', width:300, headerName: 'Metamask Wallet'},\r\n    {field:'balance', width:150, headerName: 'Balance'},\r\n    {\r\n      field:'action', \r\n      sortable: false,\r\n      width:200, \r\n      headerName: 'Action',\r\n      renderCell: (params) => {\r\n        const onClick = (e) => {\r\n          e.stopPropagation(); // don't select this row after clicking\r\n  \r\n          const api = params.api;\r\n          const thisRow = {};\r\n  \r\n          api\r\n            .getAllColumns()\r\n            .filter((c) => c.field !== '__check__' && !!c)\r\n            .forEach(\r\n              (c) => (thisRow[c.field] = params.getValue(params.id, c.field)),\r\n            );\r\n\r\n          setOpen(true);\r\n          setSelectedVoterWallet(thisRow['walletaccount']);\r\n          setSelectedVoterName(thisRow['name']);\r\n          \r\n          // return alert(JSON.stringify(thisRow, null, 4));\r\n        };\r\n        \r\n        return <Button \r\n            className={classes.button}  \r\n            startIcon={<MonetizationOnIcon/>} onClick={onClick}>\r\n            PAY ETH    \r\n        </Button>\r\n      },\r\n    }\r\n  ]);\r\n\r\n  const [searchText, setSearchText] = React.useState('');\r\n\r\n  const electionContractAddress=useSelector(state=>state.electionContractAddress);\r\n  const voters = useSelector(state=>state.voter.voters);\r\n\r\n  const [electionContract, setElectionContract] = useState(null);\r\n  const [currentAccount, setCurrentAccount] = useState('');\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedVoterWallet, setSelectedVoterWallet] = React.useState('');\r\n  const [selectedVoterName, setSelectedVoterName] = React.useState('');\r\n  \r\n  \r\n  const [amount, setAmount] = React.useState(0.001);\r\n\r\n  const handleAlertClose=(event,reason)=>{\r\n    if(reason===\"clickaway\"){\r\n      return;\r\n    }\r\n    setAlertOpen(false);\r\n  }\r\n\r\n const handleClose = () => {\r\n  setOpen(false); \r\n };\r\n\r\n const handleAddVoter= async() =>{\r\n    const web3 =await getWeb3();\r\n    try{\r\n        \r\n        electionContract.methods.adminAddVoter(selectedVoterWallet).send({\r\n            from: currentAccount,\r\n            value: web3.utils.toWei((amount).toString(), 'ether')\r\n        })\r\n        .on('transactionHash', function(hash){\r\n            // $('#addSpinner').removeClass('d-block').addClass('d-none');\r\n        })\r\n        .on('receipt', function(receipt){\r\n            handleClose();\r\n            checkMetaMask();\r\n            dispatch(alertActions.success(\"You confirmed new voter and transfer \" + amount + \" (ETH) to voter.\"));\r\n            setAlertOpen(true);\r\n        })\r\n        .on('error', function(error, receipt) {\r\n            dispatch(alertActions.error(\"Some thing wrong with this transaction!\"));\r\n            setAlertOpen(true);\r\n        });\r\n    } catch(err){\r\n        console.log(err);\r\n        dispatch(alertActions.error(\"Invalid address or some thing wrong with this transaction!\"));\r\n        setAlertOpen(true);\r\n    }\r\n    \r\n  }\r\n\r\n\r\nconst checkMetaMask = async() =>{\r\n    try {\r\n        const web3 =await getWeb3();\r\n        await web3.eth.requestAccounts();\r\n        const accounts = await web3.eth.getAccounts();\r\n        \r\n        if(accounts.length>0){\r\n          dispatch(userActions.getAll());\r\n          console.log(voters);\r\n\r\n          const pendingVoters = [];\r\n\r\n          setCurrentAccount(accounts[0]);\r\n          \r\n          const contract = new web3.eth.Contract(contractAbi,electionContractAddress);\r\n          setElectionContract(contract);\r\n\r\n          for(let i=0; i<voters.length; i++){\r\n            let _balance = 0;\r\n            await web3.eth.getBalance(voters[i].walletaccount, function (error, wei) {\r\n              if (!error) {\r\n                _balance = web3.utils.fromWei(wei, 'ether');\r\n                  console.log(_balance + \" ETH\");\r\n              }\r\n            });\r\n              pendingVoters.push({\r\n              id: voters[i]._id,\r\n              no:i + 1,\r\n              username: voters[i].username,\r\n              name: voters[i].name,\r\n              email: voters[i].email,\r\n              address: voters[i].address,\r\n              phone: voters[i].phone,\r\n              walletaccount: voters[i].walletaccount,\r\n              balance: parseFloat(_balance).toFixed(6) + ' ETH',\r\n              action: ''\r\n            });\r\n            console.log('balance:', _balance);\r\n          }\r\n          \r\n          setRows(pendingVoters);\r\n        }\r\n    } catch (error) {\r\n      dispatch(alertActions.error(\"Voter list fetching issue.\"));\r\n      setAlertOpen(true);\r\n    }\r\n  }\r\n\r\n  const handleAmountChange=(e)=>{\r\n    const value = e.target.value;\r\n    setAmount(value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(pageActions.setPageName('elections'));\r\n    checkMetaMask();\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        {\r\n          \r\n          <Snackbar open={!isEmpty(alertContent) && alertOpen} autoHideDuration={6000} onClose={handleAlertClose}>\r\n              <Alert onClose={handleAlertClose} severity={alertContent.type} sx={{width:'100%'}}>\r\n              {alertContent.message}\r\n              </Alert>\r\n          </Snackbar>\r\n        }\r\n        \r\n        <Paper style={{ height: '80vh', width: '90%', margin:'3%'}} elevation={24}>\r\n          <DataGrid\r\n            style = {{ padding: '10px'}}\r\n            onSelectionModelChange={(newSelectionModel)=>{\r\n              // handleSelectionChange(newSelectionModel[0]);\r\n            }}\r\n            // components={{ Toolbar: QuickSearchToolbar }}\r\n            rows={rows}\r\n            columns={columns}\r\n          />\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            <Box sx={modalStyle}>\r\n              <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                {`Transfor following amount of ETH to \"${selectedVoterName}\"`}\r\n              </Typography>\r\n              <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                {`Wallet Address :  ${selectedVoterWallet}`}\r\n              </Typography>\r\n              <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Amount\"\r\n                  required\r\n                  fullWidth\r\n                  className={classes.textField}\r\n                  value={amount}\r\n                  onChange={handleAmountChange}\r\n                  style={{marginTop:'2rem', marginBottom: '2rem'}}\r\n              />\r\n              <Button className={classes.button}  startIcon={<MonetizationOnIcon />} onClick={handleAddVoter} style={{padding:'1rem'}}>\r\n                Confirm and Pay\r\n              </Button>\r\n            </Box>\r\n          </Modal>\r\n        </Paper>\r\n      </>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport http from '../../http.comon';\r\nimport {alertActions} from '../../actions/alert.action';\r\nimport isEmpty from 'is-empty';\r\nimport classNames from 'classnames';\r\n\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    Divider,\r\n    Button,\r\n    Box,\r\n    LinearProgress,\r\n    Card, \r\n    CardMedia, \r\n    CardContent, \r\n    CardActionArea,\r\n    Avatar,\r\n    IconButton,\r\n    Snackbar\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {\r\n    ArrowBackIosOutlined,\r\n    Check,\r\n} from '@material-ui/icons'\r\nimport TelegramIcon from '@mui/icons-material/Telegram';\r\nimport ChartIcon from '@mui/icons-material/BarChart';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport getWeb3 from '../../getWeb3';\r\nimport {contractAbi} from '../../app/contractAbi';\r\nimport { selectionActions } from '../../actions/selection.action';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\nconst Alert=React.forwardRef(function Alert(props, ref){\r\n    return  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}/>\r\n  });\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        flexGrow:1,\r\n        backgroundColor:\"#fff\",\r\n        height:\"100%\",\r\n    },\r\n    paper:{\r\n      margin:'5%',\r\n      width:\"100%\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: '3%',\r\n        padding:'5%',\r\n    },\r\n    button:{\r\n        backgroundColor:\"#2196f3\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#2156a3',\r\n        },\r\n        textTransform:'none',\r\n        width:\"120px\",\r\n    },\r\n    statusbutton: {\r\n        backgroundColor:\"#1bc714\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#1ddf15',\r\n        },\r\n        textTransform:'none',\r\n        width:\"150px\",\r\n    },\r\n    card: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    cardActive:{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        border: `3px solid orange`,\r\n    },\r\n    cardMedia: {\r\n        paddingTop: \"56.25%\", // 16:9\r\n    \r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    avatar: {\r\n        border: `3px solid orange`,\r\n        width: theme.spacing(12),\r\n        height:theme.spacing(12),\r\n        boxShadow:theme.spacing(12),\r\n    },\r\n}));\r\n\r\n\r\nconst cards=[\r\n    {\r\n        title:\"Secure Voting\",\r\n        description:'Each voter has a unique \"Voter ID\" and \"Voter Key\" and can only vote once.',\r\n        img:\"guy-holding-ipad.jpg\"\r\n    },\r\n    {\r\n        title:\"Mobile Ready\",\r\n        description:'Elections are optimized for ',\r\n        img:\"driver2.png\"\r\n    },\r\n    {\r\n        title:\"Custom Design\",\r\n        description:`Personalize your election with your organization's logo and colors. `,\r\n        img:\"driver.png\"\r\n    },\r\n    \r\n];\r\n\r\nconst fakeElectionOptions = [\r\n    {optionIndex:1, optionLength:5, totalOptionVote:25,totalVote:60, percentage:45,name:'abcd',avatarUrl:'driver.png',description:'This is option of '},\r\n    {optionIndex:2, optionLength:3, totalOptionVote:30,totalVote:75, percentage:40,name:'aaaa',avatarUrl:'driver2.png',description:'This is option of '},\r\n    {optionIndex:3, optionLength:2, totalOptionVote:40,totalVote:50, percentage:80,name:'abcvvvd',avatarUrl:'ipad-dashboard.jpg',description:'This is option of '},\r\n    {optionIndex:4, optionLength:7, totalOptionVote:10,totalVote:60, percentage:10,name:'absadfcd',avatarUrl:'driver.png',description:'This is option of '},\r\n    {optionIndex:5, optionLength:4, totalOptionVote:50,totalVote:80, percentage:65,name:'abadfaacd',avatarUrl:'driver2.png',description:'This is option of '},\r\n    {optionIndex:6, optionLength:5, totalOptionVote:60,totalVote:90, percentage:60,name:'abadfcd',avatarUrl:'guy-holding-ipad',description:'This is option of '},\r\n];\r\n\r\nexport default function ElectionVote(){\r\n    const classes=useStyles();\r\n    const dispatch = useDispatch();\r\n    const selectedId = useSelector(state=>state.selectionInfo.selectedId);\r\n    const selectedName = useSelector(state=>state.selectionInfo.selectedName);\r\n    const electionContractAddress = useSelector(state=>state.electionContractAddress);\r\n    const [electionContract, setElectionContract] = useState('');\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n    const [electionName, setElectionName] = useState('');\r\n    const [electionOptions, setElectionOptions] = useState([]);\r\n    const [registered, setRegistered] = useState(false);\r\n    const [voted, setVoted] = useState(false);\r\n    const [votedName, setVotedName] = useState('');\r\n    const [activeId, setActiveId] = useState(null);\r\n    const alertContent = useSelector(state=>state.alert);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        checkMetaMask();\r\n        checkPromissionToVote();\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(electionContract)\r\n        {\r\n            electionContract.methods.userVote(currentAccount, selectedId).call({\r\n                from:currentAccount\r\n            }).then(vote_res=>{\r\n                console.log('res', vote_res);\r\n                if(vote_res=='0'){\r\n                    setVoted(false);\r\n                    setVotedName('');\r\n                } else{\r\n                    setVoted(true);\r\n                    console.log('length : ', electionOptions.length);\r\n                    if(electionOptions.length != 0){\r\n                        setVotedName(electionOptions[Number(vote_res)].name);\r\n                    }\r\n                }\r\n                return electionContract.methods.voters(currentAccount).call({\r\n                    from:currentAccount\r\n                });\r\n            }).then(res=>{\r\n                console.log('registered voite :', res);\r\n                if(res){\r\n                    setRegistered(true);\r\n                } else{\r\n                    setRegistered(false);\r\n                }\r\n            }).catch(err => {\r\n                console.log('error', err);\r\n            })\r\n        }\r\n        \r\n    },[electionOptions]);\r\n\r\n    const handleToBack=()=>{\r\n        dispatch(selectionActions.clear());\r\n        history.push('/elections');\r\n    }\r\n    const checkPromissionToVote=()=>{\r\n        console.log('checkPromissionToVote');\r\n        \r\n        if(electionContract)\r\n        {\r\n            electionContract.methods.voters(currentAccount).call({\r\n                from:currentAccount\r\n            }).then(res=>{\r\n                if(res){\r\n                    setRegistered(true);\r\n                } else{\r\n                    setRegistered(false);\r\n                }\r\n            }).catch(err =>{   \r\n                console.log(err);\r\n            })\r\n        }\r\n    }\r\n    const handleSelectCandidate=(index)=>{\r\n        \r\n        setActiveId(index);\r\n    }\r\n    const checkMetaMask=async()=>{\r\n\r\n        try{\r\n            const web3 =await getWeb3();\r\n            await web3.eth.requestAccounts();\r\n            const accounts = await web3.eth.getAccounts();\r\n            \r\n            setElectionOptions([]);\r\n            \r\n            if(accounts.length>0){\r\n                setCurrentAccount(accounts[0]);\r\n                const contract = new web3.eth.Contract(contractAbi,electionContractAddress);\r\n                setElectionContract(contract);\r\n                contract.methods.electionInfo(selectedId).call({\r\n                    from:accounts[0]\r\n                }).then(res=>{\r\n                    console.log('GetElectionInfo', res);\r\n                   \r\n                    const electionJson = JSON.parse(res._json);\r\n\r\n                    const st = Number(electionJson.startDate);\r\n                    const en = Number(electionJson.endDate);\r\n\r\n                    setStartDate(st);\r\n                    setEndDate(en);\r\n\r\n                    setElectionName(res.name);\r\n                    let candidateList = res._options.map(JSON.parse);\r\n                    let candidateImageList = [];\r\n                    \r\n                    http.post('/auth/user/get-image',candidateList)\r\n                    .then(response=>{\r\n                        candidateImageList = response.data.candidateList;\r\n                        let totalVote = res._total;\r\n                        let percentage = 0;\r\n                        \r\n                        let electionOptionsList = [];\r\n                        for(let i=0;i<candidateImageList.length;i++){\r\n                            let totalOptionVote = res._optionVotes[i];\r\n                            percentage = totalVote == '0' ? 0 : (Number(totalOptionVote) / Number(totalVote)) * 100;\r\n\r\n                            const electionOption={\r\n                                optionIndex:i,\r\n                                name:candidateImageList[i].name,\r\n                                avatar:candidateImageList[i].base64Image,\r\n                                description:candidateImageList[i].description,\r\n                                optionLength:candidateImageList.length,\r\n                                totalOptionVote:totalOptionVote,\r\n                                totalVote:res._total,\r\n                                percentage:percentage\r\n                            }\r\n                            electionOptionsList.push(electionOption);\r\n                            // setElectionOptions(electionOptions=>([...electionOptions, electionOption]));\r\n                        }\r\n                        setElectionOptions(electionOptionsList);\r\n                    }).catch(err => {\r\n                        console.log(err);\r\n                    })\r\n                }).catch(err => {\r\n                    console.log('error', err);\r\n                })\r\n                        \r\n                // setElectionOptions(fakeElectionOptions);\r\n            }\r\n            \r\n        }catch(error){\r\n\r\n        }\r\n    }\r\n\r\n    const handleVote=()=>{\r\n        \r\n        if(activeId==null){\r\n            dispatch(alertActions.error('You should choose one of the candidate.'));\r\n            setAlertOpen(true);\r\n            return;\r\n        }\r\n        const currentDate = moment().unix();\r\n        if(currentDate<startDate){\r\n            dispatch(alertActions.error('The election is not started yet'));\r\n            setAlertOpen(true);\r\n            return;\r\n        }\r\n        if(currentDate>endDate){\r\n            dispatch(alertActions.error('The election was expired'));\r\n            setAlertOpen(true);\r\n            return;\r\n        }\r\n        console.log('selectedId', selectedId);\r\n        console.log('activeid', activeId);\r\n        electionContract.methods.vote(selectedId, activeId).send({\r\n            from:currentAccount\r\n        }).on('transactionHash', function(hash){\r\n               \r\n          })\r\n          .on('receipt', function(receipt){\r\n                dispatch(alertActions.success('You have successfully vote to the selected candidate'));\r\n                // Refresh the electionOptions state variable....\r\n                setAlertOpen(true);\r\n\r\n                if(electionOptions.length != 0){\r\n                    setVotedName(electionOptions[activeId].name);\r\n                }\r\n          })\r\n          .on('error', function(error, receipt) {\r\n               console.log(error);\r\n                dispatch(alertActions.error('Some thing wrong with this transaction!'));\r\n                setAlertOpen(true);\r\n           })\r\n    }\r\n\r\n    const handleElectionStatus=() => {\r\n        console.log(selectedId);\r\n        console.log(selectedName);\r\n        const selectedItem={\r\n            selectedId:selectedId,\r\n            selectedName:selectedName,\r\n          }\r\n        dispatch(selectionActions.setSelectedItem(selectedItem));\r\n\r\n        history.push('/elections/election-status');\r\n    }\r\n\r\n    const handleAlertClose=(event,reason)=>{\r\n        if(reason===\"clickaway\"){\r\n          return;\r\n        }\r\n        setAlertOpen(false);\r\n    }\r\n    return(\r\n        <>\r\n            {\r\n            \r\n                <Snackbar open={!isEmpty(alertContent) && alertOpen} autoHideDuration={6000} onClose={handleAlertClose}>\r\n                    <Alert onClose={handleAlertClose} severity={alertContent.type} sx={{width:'100%'}}>\r\n                    {alertContent.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n            <Grid container container component=\"main\" className={classes.root}>\r\n                <Grid container >\r\n                    <IconButton style={{color:'#2196f3'}} onClick={handleToBack}>\r\n                        <ArrowBackIosOutlined/>\r\n                        Back\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid container item xs={12} sm={12} md={7} lg={7} xl={7} style={{padding:'2%'}}>\r\n\r\n                    <Paper className={classes.paper} elevation={16}>\r\n                        <form className={classes.form}>\r\n                            <Grid container style={{padding:'3%',flexWrap:'nowrap'}}>\r\n                                <Typography style={{fontWeight:'bold'}}> Election Name:</Typography>\r\n                                <Box style={{flexGrow:0.5}}/>\r\n                                <Typography style={{width:'200px',marginRight:'2%', overflowX:'hidden', textOverflow:'ellipsis'}}>{selectedName}</Typography>\r\n                            </Grid>\r\n                            <Divider/>\r\n                            <Grid container  style={{padding:'3%',flexWrap:'nowrap'}}>\r\n                                <Typography style={{fontWeight:'bold'}}> ElectionID:</Typography>\r\n                                <Box style={{flexGrow:0.5}}/>\r\n                                <Typography style={{width:'200px', overflowX:'hidden', textOverflow:'ellipsis'}}>{selectedId}</Typography>\r\n                            </Grid>\r\n                            <Divider/>\r\n\r\n                            <Grid container style={{padding:'3%',flexWrap:'nowrap'}}>\r\n                                <Typography style={{fontWeight:'bold'}}>Your Address:</Typography>\r\n                                <Box style={{flexGrow:0.5}}/>\r\n                                <Typography  style={{width:'200px', overflowX:'hidden', textOverflow:'ellipsis'}}>{currentAccount}</Typography>\r\n                            </Grid>\r\n                            <Divider/>\r\n\r\n                            <Grid container style={{padding:'3%',flexWrap:'nowrap'}}>\r\n                                <Typography style={{fontWeight:'bold'}}>View Statistics:</Typography>\r\n                                <Box style={{flexGrow:0.4}}/>\r\n                                <Button \r\n                                    className={classNames(classes.button, classes.statusbutton)}  \r\n                                    startIcon={<ChartIcon/>} onClick={handleElectionStatus}>\r\n                                    Election Status    \r\n                                </Button>\r\n                            </Grid>\r\n                            <Divider/>\r\n                            \r\n                            <Grid container style={{flexGrow:1,marginTop:'30px', maxHeight:'80vh', overflowY:'auto'}}>\r\n                                {/* {\r\n                                    electionOptions.map((option)=>(\r\n                                    \r\n                                    <Grid container key={option.optionIndex} style={{paddingRight:'5%', paddingBottom:'20px'}}>\r\n                                       <Grid container style={{flexWrap:'nowrap'}}>\r\n                                            <Typography style={{fontWeight:'bold'}}>{option.name}</Typography>\r\n                                            <Box style={{flexGrow:1}}/>\r\n                                            <Typography style={{fontWeight:'bold', paddingRight:'5px', color:'#2196f3'}}>{option.totalOptionVote}</Typography>\r\n                                            <Typography >({option.percentage}%)</Typography>\r\n                                        </Grid>\r\n                                        <Grid container style={{paddingBottom:'5%'}}>\r\n                                            <LinearProgress variant=\"determinate\" value={option.percentage} style={{width:'100%', color:'#2196f3', padding:'3px'}}/>\r\n                                        </Grid>\r\n                                         \r\n                                    </Grid>\r\n                                ))}  */}\r\n                                \r\n                                <Grid container >\r\n                                    {electionOptions.map((card) => (\r\n                                        <Grid \r\n                                            container \r\n                                            item \r\n                                            key={card.optionIndex} \r\n                                            xs={12} sm={12} md={12} \r\n                                            style={{padding:'3%'}}\r\n                                            onClick={()=>handleSelectCandidate(card.optionIndex)}\r\n                                            >\r\n                                            <Card \r\n                                                className={card.optionIndex == activeId ? classes.cardActive : classes.card} \r\n                                                style={{flexWrap:'nowrap', width:'100%'}} >\r\n                                                <CardActionArea>\r\n                                                    <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n\r\n                                                        <Grid container justifyContent=\"center\" item xs={12} sm={3} md={3} style={{padding:'1%'}}>\r\n                                                            \r\n                                                        <Avatar\r\n                                                                src={`data:../image/png;base64,${card.avatar}`}\r\n                                                                classes={{ root: classes.avatar, circle: classes.circle }}\r\n                                                            />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                            <CardContent className={classes.cardContent}>\r\n                                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                                {card.name}\r\n                                                                </Typography>\r\n                                                                <Typography>{card.description } { card.name}</Typography>\r\n                                                            </CardContent>\r\n                                                            \r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                               \r\n                                                </CardActionArea>\r\n                                                \r\n                                                \r\n                                            </Card>\r\n                                        </Grid>\r\n                                        ))}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container style={{padding:'3%'}}>\r\n                                <Box style={{flexGrow:1,}}/>\r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    startIcon={<TelegramIcon/>} onClick={handleVote}>\r\n                                    Vote    \r\n                                </Button>\r\n                            </Grid>\r\n                            \r\n                        </form>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid container item xs={12} sm={12} md={5} lg={5} xl={5} style={{padding:'2%'}}>\r\n                   <Box className={classes.paper}>\r\n                        <Paper elevation={16} style={{maxHeight:'150px', marginBottom:'30px'}}>\r\n                            <form className={classes.form}>\r\n                                <Grid container justifyContent=\"center\">\r\n                                    <Typography style={{fontWeight:'bold', fontSize:18}}> Are you registered to vote?</Typography>\r\n                                </Grid>\r\n                                <Divider/>\r\n                                <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                                    {\r\n                                        registered ? <Check style={{color:'#2196f3', paddingRight:'1%'}}/> :<HighlightOffIcon style={{color:'#ff0000', paddingRight:'1%'}}/>\r\n                                    }\r\n                                    <Typography \r\n                                        style={{\r\n                                            paddingTop:'5%',\r\n                                            paddingBottom:'5%',\r\n                                            color:registered ? '#2196f3':'#ff0000'\r\n                                            }}>{registered ? 'Registered' : 'Not registered'}</Typography>\r\n                                </Grid>\r\n                            </form>\r\n                        </Paper>\r\n                    \r\n                    \r\n                        <Paper elevation={16} style={{maxHeight:'150px', marginBottom:'30px'}}>\r\n                            <form className={classes.form} >\r\n                                <Grid container justifyContent=\"center\">\r\n                                    <Typography style={{fontWeight:'bold', fontSize:18}}>Your Vote In This Election</Typography>\r\n                                </Grid>\r\n                                \r\n                                <Divider/>\r\n                                <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                                    {\r\n                                        voted ?\r\n                                        <Typography style={{paddingTop:'5%',paddingBottom:'5%'}}>{votedName}</Typography>\r\n                                        :\r\n                                        <Typography style={{paddingTop:'5%',paddingBottom:'5%'}}> You have not voted yet</Typography>\r\n                                    }\r\n                                    \r\n                                </Grid>\r\n                                <Grid>\r\n\r\n                                </Grid>\r\n                            </form>\r\n                        </Paper>\r\n                        <Paper elevation={16} style={{maxHeight:'200px', marginBottom:'30px'}} >\r\n                            <form className={classes.form}>\r\n                                <Grid container justifyContent=\"center\">\r\n                                    <Typography style={{fontWeight:'bold', fontSize:18}}> Election Date</Typography>\r\n                                </Grid>\r\n                                \r\n                                <Divider/>\r\n                                <Grid container justifyContent=\"center\">\r\n                                    <Typography style={{paddingTop:'3%', color:'#007fff', fontWeight:'bold'}}>Start Date: {moment.unix(startDate).format('YYYY-MM-DD HH:MM')}</Typography>\r\n                                </Grid>\r\n                                <Grid container justifyContent=\"center\">\r\n                                    <Typography style={{paddingTop:'3%', color:'#007fff', fontWeight:'bold'}}>End Date: {moment.unix(endDate).format('YYYY-MM-DD HH:MM')}</Typography>\r\n                                </Grid>\r\n                            </form>\r\n                        </Paper>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport http from '../../http.comon';\r\nimport {alertActions} from '../../actions/alert.action';\r\nimport isEmpty from 'is-empty';\r\nimport classNames from 'classnames';\r\n\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    Divider,\r\n    Button,\r\n    Box,\r\n    LinearProgress,\r\n    Card, \r\n    CardMedia, \r\n    CardContent, \r\n    CardActionArea,\r\n    Avatar,\r\n    IconButton,\r\n    Snackbar\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    Chart,\r\n    BarSeries,\r\n\r\n    PieSeries,\r\n    Title,\r\n    // Animation,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport PieChart, {\r\n    Legend,\r\n    Export,\r\n    Series,\r\n    Label,\r\n    Font,\r\n    Connector,\r\n} from 'devextreme-react/pie-chart';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {\r\n    ArrowBackIosOutlined,\r\n    Check,\r\n} from '@material-ui/icons'\r\nimport TelegramIcon from '@mui/icons-material/Telegram';\r\nimport ChartIcon from '@mui/icons-material/BarChart';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport getWeb3 from '../../getWeb3';\r\nimport {contractAbi} from '../../app/contractAbi';\r\nimport { selectionActions } from '../../actions/selection.action';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\nconst Alert=React.forwardRef(function Alert(props, ref){\r\n    return  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}/>\r\n  });\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        flexGrow:1,\r\n        backgroundColor:\"#fff\",\r\n        height:\"100%\",\r\n    },\r\n    paper:{\r\n      margin:'5%',\r\n      width:\"100%\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: '3%',\r\n        padding:'5%',\r\n    },\r\n    button:{\r\n        backgroundColor:\"#2196f3\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#2156a3',\r\n        },\r\n        textTransform:'none',\r\n        width:\"120px\",\r\n    },\r\n    statusbutton: {\r\n        width: \"150px\"\r\n    },\r\n    card: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    cardActive:{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        border: `3px solid orange`,\r\n    },\r\n    cardMedia: {\r\n        paddingTop: \"56.25%\", // 16:9\r\n    \r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    avatar: {\r\n        border: `3px solid orange`,\r\n        width: theme.spacing(12),\r\n        height:theme.spacing(12),\r\n        boxShadow:theme.spacing(12),\r\n    },\r\n    boardTitle: {\r\n        fontWeight: 'bold',\r\n        fontSize: '2rem',\r\n        paddingLeft: '0.5rem',\r\n    },\r\n    boardContent: {\r\n        fontSize: '3rem',\r\n        textAlign: 'center',\r\n        padding: '10%',\r\n    },\r\n    boardIndex: {\r\n        color: 'darkgray',\r\n    },\r\n    electionTitle: {\r\n        fontSize: '3rem',\r\n        padding: '1rem',\r\n        textAlign: 'center',\r\n    }\r\n}));\r\n\r\n\r\nconst cards=[\r\n    {\r\n        title:\"Secure Voting\",\r\n        description:'Each voter has a unique \"Voter ID\" and \"Voter Key\" and can only vote once.',\r\n        img:\"guy-holding-ipad.jpg\"\r\n    },\r\n    {\r\n        title:\"Mobile Ready\",\r\n        description:'Elections are optimized for ',\r\n        img:\"driver2.png\"\r\n    },\r\n    {\r\n        title:\"Custom Design\",\r\n        description:`Personalize your election with your organization's logo and colors. `,\r\n        img:\"driver.png\"\r\n    },\r\n    \r\n];\r\n\r\nexport default function ElectionVote(){\r\n    const classes=useStyles();\r\n    const dispatch = useDispatch();\r\n    const selectedId = useSelector(state=>state.selectionInfo.selectedId);\r\n    const selectedName = useSelector(state=>state.selectionInfo.selectedName);\r\n    const electionContractAddress = useSelector(state=>state.electionContractAddress);\r\n    const [electionContract, setElectionContract] = useState('');\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n    const [electionName, setElectionName] = useState('');\r\n    const [votingStatus, setVotingStatus] = useState([]);\r\n\r\n    const alertContent = useSelector(state=>state.alert);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        checkMetaMask();\r\n    },[]);\r\n\r\n    const handleToBack=()=>{\r\n        dispatch(selectionActions.clear());\r\n        history.push('/elections');\r\n    }\r\n \r\n    const checkMetaMask=async()=>{\r\n\r\n        try{\r\n            const web3 =await getWeb3();\r\n            await web3.eth.requestAccounts();\r\n            const accounts = await web3.eth.getAccounts();\r\n            \r\n            setVotingStatus([]);\r\n            \r\n            if(accounts.length>0){\r\n                setCurrentAccount(accounts[0]);\r\n                const contract = new web3.eth.Contract(contractAbi,electionContractAddress);\r\n                setElectionContract(contract);\r\n                contract.methods.electionInfo(selectedId).call({\r\n                    from:accounts[0]\r\n                }).then(res=>{\r\n                    console.log('GetElectionInfo', res);\r\n                   \r\n                    let candidateList = res._options.map(JSON.parse);\r\n\r\n                    let length = res._optionVotes.length;\r\n                    for(let i = 0; i < length; i++) {\r\n                        const votingInfo = {\r\n                            argument: candidateList[i]['name'],\r\n                            value: Number(res._optionVotes[i])\r\n                        };\r\n                        console.log(votingInfo);\r\n                        setVotingStatus(votingStatus=>([...votingStatus, votingInfo]));\r\n\r\n                    }\r\n                }).catch(err => {\r\n                    console.log('error', err);\r\n                })\r\n            }\r\n            \r\n        }catch(error){\r\n\r\n        }\r\n    }\r\n\r\n    const handleAlertClose=(event,reason)=>{\r\n        if(reason===\"clickaway\"){\r\n          return;\r\n        }\r\n        setAlertOpen(false);\r\n    }\r\n\r\n    function customizeText(arg) {\r\n        return `${arg.valueText} (${arg.percentText})`;\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n            \r\n                <Snackbar open={!isEmpty(alertContent) && alertOpen} autoHideDuration={6000} onClose={handleAlertClose}>\r\n                    <Alert onClose={handleAlertClose} severity={alertContent.type} sx={{width:'100%'}}>\r\n                    {alertContent.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n            <Grid container container component=\"main\" className={classes.root}>\r\n                <Grid container >\r\n                    <IconButton style={{color:'#2196f3'}} onClick={handleToBack}>\r\n                        <ArrowBackIosOutlined/>\r\n                        Back\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid container >\r\n                    <Paper className={classes.paper} elevation={0} style={{margin:'0px'}}>\r\n                        <Typography className={classes.electionTitle}> {selectedName} </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid container style={{padding:'1%'}}>\r\n                    <Grid container item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                        <Paper className={classes.paper} elevation={8}>\r\n                            <Chart data={votingStatus}>\r\n                                <ArgumentAxis />\r\n                                <ValueAxis />\r\n                            \r\n                                <BarSeries valueField=\"value\" argumentField=\"argument\" />\r\n                            </Chart>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid container item xs={12} sm={12} md={6} lg={6} xl={6}>    \r\n                        <Paper className={classes.paper} elevation={8}>\r\n                            <PieChart id=\"pie\"\r\n                                palette=\"Bright\"\r\n                                dataSource={votingStatus}\r\n                                // title=\"Olympic Medals in 2008\"\r\n                            >\r\n                                <Legend\r\n                                orientation=\"horizontal\"\r\n                                itemTextPosition=\"right\"\r\n                                horizontalAlignment=\"center\"\r\n                                verticalAlignment=\"bottom\"\r\n                                columnCount={4} />\r\n                                <Export enabled={true} />\r\n                                <Series argumentField=\"argument\" valueField=\"value\">\r\n                                <Label\r\n                                    visible={true}\r\n                                    position=\"columns\"\r\n                                    customizeText={customizeText}>\r\n                                    <Font size={16} />\r\n                                    <Connector visible={true} width={0.5} />\r\n                                </Label>\r\n                                </Series>\r\n                            </PieChart>      \r\n                        </Paper>                      \r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{padding:'2%'}}>\r\n                    {votingStatus.map((chart, index) => (\r\n                        \r\n                        <Grid container item xs={12} sm={12} md={3} lg={3} xl={3}> \r\n                            <Paper className={classes.paper} elevation={8} style={{padding: '5%'}}>\r\n                                <Typography className={classes.boardTitle}> {chart.argument} </Typography>\r\n                                <Typography className={classes.boardIndex}> {`#${index + 1}`} </Typography>\r\n                                <Typography className={classes.boardContent}> {chart.value} </Typography>\r\n                            </Paper>\r\n\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </>\r\n    );\r\n}","import React,{useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Switch, Route, useHistory} from 'react-router-dom';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Settings from '@mui/icons-material/Settings';\r\nimport Logout from '@mui/icons-material/Logout';\r\nimport { pageActions } from '../../actions/pageInfo.action';\r\nimport {\r\n  Grid\r\n} from '@mui/material'\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport {\r\n  LibraryAdd,\r\n  FindInPage,\r\n  AssignmentInd,\r\n  PersonAdd,\r\n  SettingsInputAntenna,\r\n  FlashOnTwoTone\r\n\r\n} from '@material-ui/icons'\r\nimport AddNewElection from './AddNewElection';\r\nimport AddNewAdmin from './AddNewAdmin';\r\nimport Elections from './Elections';\r\nimport VoterManagement from './VoterManagement';\r\nimport ElectionVote from './ElectionVote';\r\nimport ElectionStatus from './ElectionStatus';\r\n\r\n\r\nexport default function ElectionsPage() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [pagename, setPagename]=React.useState(\"Add New Election\");\r\n  const dispatch =useDispatch();\r\n  const history = useHistory();\r\n  const isAdmin = useSelector(state=>state.adminInfo.isAdmin);\r\n\r\n  useEffect(()=>{\r\n    dispatch(pageActions.setPageName('elections'));\r\n  })\r\n  const handleToNewElecton=()=>{\r\n    history.push('/elections/election-new');\r\n    setPagename(\"Add New Election\");\r\n  }\r\n  const handleToElections=()=>{\r\n    history.push('/elections');\r\n    setPagename(\"Elections\");\r\n  }\r\n\r\n  const handleToVoterManagement=()=>{\r\n    history.push('/elections/voter-management');\r\n    setPagename(\"Voter Management\");\r\n  }\r\n  const handleToNewAdmin=()=>{\r\n    history.push('/elections/add-new-admin');\r\n    setPagename(\"Add New Admin\");\r\n  }\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleToLogout=()=>{\r\n    history.push('/');\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Grid component='main' container>\r\n        <Grid container style={{backgroundColor:'#071722', padding:'10px'}}>\r\n            <img src='../image/android-icon.png' style={{width:'48px',height:'48px'}}/>\r\n            <Typography component=\"h5\" variant='h5' style={{color:'#fff', paddingLeft:'10px', marginTop:'10px'}}> {isAdmin ? pagename : 'Elections'} </Typography>\r\n            <Box style={{flexGrow:1}}/>\r\n            \r\n              <Tooltip title=\"Account settings\">\r\n                <IconButton onClick={handleClick} size=\"small\" sx={{ ml: 2 }}>\r\n                  <MoreIcon style={{color:'#fff'}}/>\r\n                </IconButton>\r\n              </Tooltip>\r\n            <Menu\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              onClick={handleClose}\r\n              PaperProps={{\r\n                elevation: 0,\r\n                sx: {\r\n                  overflow: 'visible',\r\n                  filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                  mt: 1.5,\r\n                  '& .MuiAvatar-root': {\r\n                    width: 32,\r\n                    height: 32,\r\n                    ml: -0.5,\r\n                    mr: 1,\r\n                  },\r\n                  '&:before': {\r\n                    content: '\"\"',\r\n                    display: 'block',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    right: 14,\r\n                    width: 10,\r\n                    height: 10,\r\n                    bgcolor: 'background.paper',\r\n                    transform: 'translateY(-50%) rotate(45deg)',\r\n                    zIndex: 0,\r\n                  },\r\n                },\r\n              }}\r\n              transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n              anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n            >\r\n            {\r\n              isAdmin ? \r\n            <>\r\n              <MenuItem onClick={handleToNewElecton}>\r\n                <ListItemIcon>\r\n                  <LibraryAdd/> \r\n                </ListItemIcon>\r\n                Add New Election\r\n              </MenuItem>\r\n              <MenuItem onClick={handleToElections}>\r\n                <ListItemIcon>\r\n                  <FindInPage /> \r\n                </ListItemIcon>\r\n                Elections\r\n              </MenuItem>\r\n              \r\n              <MenuItem onClick={handleToVoterManagement}>\r\n                <ListItemIcon>\r\n                  <AssignmentInd fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                Voter Management\r\n              </MenuItem>\r\n              <MenuItem onClick={handleToNewAdmin}>\r\n                <ListItemIcon>\r\n                  <PersonAdd fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                Add New Admin\r\n              </MenuItem>\r\n              <Divider />\r\n              <MenuItem onClick={handleToLogout}>\r\n                <ListItemIcon>\r\n                  <Logout fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                Logout\r\n              </MenuItem>\r\n            </>\r\n            :\r\n            <MenuItem onClick={handleToLogout}>\r\n              <ListItemIcon>\r\n                <Logout fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              Logout\r\n            </MenuItem>\r\n            }\r\n          </Menu>\r\n        </Grid>\r\n        <Grid container justifyContent=\"center\">\r\n          <Switch>\r\n            <Route exact path='/elections' component={Elections}/>\r\n            <Route path='/elections/add-new-admin' component={AddNewAdmin} />\r\n            <Route path='/elections/election-new' component={AddNewElection} />\r\n            <Route path='/elections/voter-management' component={VoterManagement} />\r\n            <Route path='/elections/election-vote' component={ElectionVote}/>\r\n            <Route path='/elections/election-status' component={ElectionStatus}/>\r\n\r\n          </Switch>\r\n      </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {alertActions} from '../actions/alert.action';\r\nimport isEmpty from \"is-empty\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport http from '../http.comon';\r\nimport {pageActions} from '../actions/pageInfo.action';\r\n\r\nimport {\r\n    Grid,\r\n    Box,\r\n    CssBaseline,\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    Divider,\r\n    Paper,\r\n    Snackbar\r\n\r\n} from '@material-ui/core'\r\nimport MuiAlert from '@mui/lab/Alert';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\n\r\nconst Alert=React.forwardRef(function Alert(props, ref){\r\n    return  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}/>\r\n  });\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        flexGrow:1,\r\n        backgroundColor:\"#071722\",\r\n        height:\"100%\",\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(12),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      elevation:3,\r\n      width:\"60%\",\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      padding:theme.spacing(0,0,8,0),\r\n    },\r\n    panel:{\r\n        // margin:theme.spacing(2,4,2,4),\r\n    },\r\n    button:{\r\n        backgroundColor:\"#00aa00\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#007700',\r\n        },\r\n        margin:theme.spacing(1,0,1,0),\r\n        width:\"98%\",\r\n    },\r\n    textField:{\r\n        margin:theme.spacing(1,0,1,0),\r\n    },\r\n    \r\n}));\r\n\r\nexport default function ForgotPassword(){\r\n    const classes=useStyles();\r\n    const alertContent = useSelector(state=>state.alert);\r\n    const forgotEmail = useSelector(state=>state.forgotEmail.forgotEmail);\r\n    const dispatch = useDispatch();\r\n    const [code, setCode] = useState('');\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const history = useHistory();\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    useEffect(()=>{\r\n        dispatch(alertActions.clear()); \r\n        dispatch(pageActions.setPageName('forgotpassword'));\r\n    },[]);\r\n    \r\n   \r\n    const handleAlertClose=(event,reason)=>{\r\n        if(reason===\"clickaway\"){\r\n            return;\r\n        }\r\n\r\n        setAlertOpen(false);\r\n    }\r\n    /**\r\n     * enter new password.\r\n     * @param {} e \r\n     */\r\n    const handleNewPasswordChange=(e)=>{\r\n        const value = e.target.value;\r\n        setNewPassword(value);\r\n    }\r\n    /**\r\n     * enter password to confirm new password\r\n     * @param {*} e \r\n     */\r\n    const handleConfirmPasswordChange=(e)=>{\r\n        const value = e.target.value;\r\n        setConfirmPassword(value);\r\n    }\r\n    /**\r\n     * submit new pasword to server\r\n     */\r\n    const handleSetNewPassword=()=>{\r\n       if(!newPassword || !confirmPassword){\r\n           dispatch(alertActions.error('Please fill the form!'));\r\n           setAlertOpen(true);\r\n           return;\r\n       } else{\r\n           if(newPassword != confirmPassword){\r\n               dispatch(alertActions.error('Please enter correct password!'));\r\n               setAlertOpen(true);\r\n               return;\r\n           }\r\n           http.post('/auth/user/reset-password', {email:forgotEmail, newPassword:newPassword})\r\n                .then(res=>{\r\n                    history.push('/voter-login');\r\n                }, error=>{\r\n                    dispatch(alertActions.error(error.response.data));\r\n                    setAlertOpen(true);\r\n                })\r\n       }\r\n    }\r\n    const handleToLogin=()=>{\r\n        history.push('/voter-login')\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            {\r\n                <Snackbar open={!isEmpty(alertContent) && alertOpen} autoHideDuration={6000} onClose={handleAlertClose}>\r\n                    <Alert onClose={handleAlertClose} severity={alertContent.type} sx={{width:'100%'}}>\r\n                    {alertContent.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n            <Grid component=\"main\" className={classes.root}>\r\n               \r\n                <Grid container justifyContent=\"center\">\r\n                    <Paper className={classes.paper} \r\n                       elevation={24}>\r\n                        <CssBaseline/>\r\n                        <Grid container alignItems=\"center\" style={{padding:8}}>\r\n                            <LockIcon color=\"primary\" style={{marginLeft:\"8vw\",fontSize:48}}/>\r\n                            <Typography variant=\"h5\">\r\n                                New Password\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Divider style={{width:\"100%\"}}/>\r\n                        <Grid container justifyContent=\"center\" item md={12} style={{width:\"70%\", paddingTop:\"20px\"}}>\r\n                            <form className={classes.form}>\r\n                                <Grid container>\r\n                                    <Grid  container justifyContent=\"center\" >\r\n                                        <Typography variant=\"body2\" style={{padding:'1vw'}}>\r\n                                            Please reset your password.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    \r\n                                </Grid>\r\n                                <Grid container>\r\n                                    <Grid  container justifyContent=\"center\" >\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            label=\"New Password\"\r\n                                            type=\"password\"\r\n                                            required\r\n                                            fullWidth\r\n                                            className={classes.textField}\r\n                                            value={newPassword}\r\n                                            onChange={handleNewPasswordChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid  container justifyContent=\"center\" >\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            label=\"Confirm Password\"\r\n                                            type=\"password\"\r\n                                            required\r\n                                            fullWidth\r\n                                            className={classes.textField}\r\n                                            value={confirmPassword}\r\n                                            onChange={handleConfirmPasswordChange}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container>\r\n                                    <Grid container item md={6} justifyContent=\"center\"> \r\n                                        <Button className={classes.button} onClick={handleSetNewPassword}>\r\n                                            Set     \r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid container item md={6} justifyContent=\"center\">\r\n                                        <Button className={classes.button} onClick={handleToLogin}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                               \r\n                            </form>\r\n                        </Grid>\r\n                        \r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { userActions } from \"../actions/user.action\";\r\nimport { alertActions } from \"../actions/alert.action\";\r\nimport { adminActions, adminInfo } from '../actions/admin.action';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {pageActions} from '../actions/pageInfo.action';\r\nimport Particles from './Particles'\r\n\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    Button,\r\n    Typography,\r\n    Divider,\r\n    Paper,\r\n    Snackbar\r\n\r\n} from '@material-ui/core'\r\nimport {contractAbi} from '../app/contractAbi';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport SettingsInputAntennaIcon from '@mui/icons-material/SettingsInputAntenna';\r\nimport getWeb3 from \"../getWeb3\";\r\n\r\nconst Alert=React.forwardRef(function Alert(props, ref){\r\n    return  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}/>\r\n  });\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        flexGrow:1,\r\n        // backgroundColor:\"#071722\",\r\n        backgroundImage: `url('./image/background.jpg')`,\r\n        height:'100vh',\r\n    },\r\n    paper: {\r\n      margin:'5%',\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      elevation:3,\r\n      width:\"100%\",\r\n      maxHeight:'40%',\r\n      \r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      padding:theme.spacing(0,0,8,0),\r\n    },\r\n    panel:{\r\n        // margin:theme.spacing(2,4,2,4),\r\n    },\r\n    button:{\r\n        backgroundColor:\"#00aa00\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#007700',\r\n        },\r\n        margin:theme.spacing(1,0,1,0),\r\n        width:\"98%\",\r\n    },\r\n    textField:{\r\n        margin:theme.spacing(1,0,1,0),\r\n    }\r\n\r\n}));\r\nexport default function CandidateLogin(){\r\n    \r\n    const classes=useStyles();\r\n    const history =  useHistory();\r\n\r\n    const isAdmin = useSelector(state=>state.adminInfo.isAdmin);\r\n\r\n    const electionContractAddress=useSelector(state=>state.electionContractAddress);\r\n    const [electionContract, setElectionContract] = useState(null);\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n\r\n    const alertContent = useSelector(state=>state.alert);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n  \r\n    const checkMetaMask = async() =>{\r\n        try{\r\n            const web3 =await getWeb3();\r\n           \r\n            await web3.eth.requestAccounts();\r\n            \r\n            const accounts = await web3.eth.getAccounts();\r\n           \r\n            if(accounts.length>0){\r\n               \r\n                setCurrentAccount(accounts[0]);\r\n            }\r\n            const contract = new web3.eth.Contract(contractAbi,electionContractAddress);\r\n            \r\n            setElectionContract(contract);\r\n            \r\n        } catch(error){\r\n            dispatch(alertActions.error(\"Can't found MetaMask. Please install MetaMask or unlock Metask.\"));\r\n            setOpen(true);\r\n        }\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        if(window.ethereum){\r\n            window.ethereum.on('chainChanged',()=>{\r\n                dispatch(adminActions.isAdmin(false));\r\n                history.push('/');\r\n\r\n            })\r\n            window.ethereum.on('accountsChanged',()=>{\r\n                dispatch(adminActions.isAdmin(false));\r\n                history.push('/');\r\n            })\r\n\r\n        }\r\n        dispatch(alertActions.clear());\r\n        dispatch(pageActions.setPageName('adminLogin'));\r\n        checkMetaMask();\r\n    },[]);\r\n\r\n    const handleClose=(event,reason)=>{\r\n        if(reason===\"clickaway\"){\r\n          return;\r\n        }\r\n        setOpen(false);\r\n      }\r\n    const handleSubmit = ()=>{\r\n        try{\r\n            \r\n             if(currentAccount){\r\n                    dispatch(adminActions.isAdmin(false));\r\n                    localStorage.setItem('isAdmin', \"false\");\r\n                    history.push('/elections');\r\n             } else{\r\n                dispatch(alertActions.error('Please install MetaMask.'))\r\n                setOpen(true);\r\n             }\r\n            \r\n        } catch (err){\r\n            dispatch(alertActions.error(\"Some errors occurred while connecting your wallet1.\"));\r\n            setOpen(true);\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity={alertContent.type} sx={{width:'100%'}}>\r\n                    {alertContent.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n            <Grid component=\"main\" className={classes.root} container justifyContent=\"center\" alignItems=\"center\">\r\n                <Particles/>\r\n               \r\n                <Grid container justifyContent=\"center\" item xs={12} sm={8} md={6}>\r\n                    <Paper className={classes.paper} marginLeft={{xs:1, sm:2}} \r\n                       elevation={24}>\r\n                        <CssBaseline/>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" style={{marginLeft:\"8vw\", paddingTop:\"2vw\", paddingBottom:\"2vh\"}}>\r\n                                Authentication of Candidate\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Divider style={{width:\"100%\"}}/>\r\n                        <Grid container justifyContent=\"center\" item md={12} style={{width:\"60%\", paddingTop:\"20px\"}}>\r\n                            <form className={classes.form}>\r\n                                \r\n                                <Grid container>\r\n                                    <Grid container item md={12} justifyContent=\"center\"> \r\n                                        <Button \r\n                                            className={classes.button}  \r\n                                            startIcon={<SettingsInputAntennaIcon />}\r\n                                            onClick={handleSubmit}>\r\n                                            Connect Your Wallet     \r\n                                        </Button>\r\n                                    </Grid>\r\n                                    \r\n                                </Grid>\r\n                               \r\n                            </form>\r\n                        </Grid>\r\n                        \r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","\nimport React, {useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Zoom from '@material-ui/core/Zoom';\nimport Grid from '@material-ui/core/Grid';\n\nimport Navbar from './components/Navbar';\nimport HomePage from './components/HomePage';\n\nimport {Typography, AppBar} from '@material-ui/core';\n\nimport Particle from \"react-particles-js\";\nimport particlesConfig from './assets/particlesConfig.json';\nimport './App.css';\n\nimport AdminLoginPage from './components/AdminLoginPage';\nimport VoterLoginPage from './components/voter/VoterLoginPage';\nimport VoterRegisterPage from './components/voter/VoterRegisterPage';\nimport ElectionsPage from './components/election/ElectionsPage';\n\nimport ForgotPassword from './components/ForgotPassword';\nimport CandidateLogin from './components/CandidateLogin';\n\n\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      '#back-to-top-anchor',\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n      });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <Box\n        onClick={handleClick}\n        role=\"presentation\"\n        sx={{ position: 'fixed', bottom: 16, right: 16 }}\n      >\n        {children}\n      </Box>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nfunction App(props) {\n  const pageName = useSelector(state=>state.pageInfo.pageName);\n\n  useEffect(()=>{\n    \n  })\n  return (\n      \n      <Router>\n        \n        <CssBaseline />\n        {\n          pageName!=\"elections\" && <Navbar/>\n        }\n        {\n          pageName!=\"elections\" && <Toolbar id=\"back-to-top-anchor\"/> \n        }\n        <Grid container id=\"main\">\n            <Switch>\n              <Route exact path=\"/\" component={HomePage}/>\n              <Route path=\"/admin\" component={AdminLoginPage}/>\n              <Route path='/voter-login' component={VoterLoginPage}/>\n              <Route path='/voter-register' component={VoterRegisterPage} />\n              <Route path='/elections' component={ElectionsPage}/>\n              <Route path='/forgot-password' component={ForgotPassword} />\n              <Route path='/candidate-login' component={CandidateLogin}/>\n            </Switch>\n         </Grid> \n         <ScrollTop {...props}>\n           <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n             <KeyboardArrowUpIcon />\n           </Fab>\n         </ScrollTop>\n         \n         </Router>\n      \n  );\n}\n\nexport default App;\n ","import {userType} from '../actions/types';\r\nlet user=JSON.parse(localStorage.getItem('user'));\r\nconst initialState=user?{loggedIn:true,user}:{};\r\n\r\nexport function authentication(state=initialState, action){\r\n    switch(action.type){\r\n        case userType.LOGIN_REQUEST:\r\n            return{\r\n                loggingIn:true,\r\n                user:action.user\r\n            };\r\n        case userType.LOGIN_SUCCESS:\r\n            return {\r\n                loggedIn:true,\r\n                user:action.user\r\n            };\r\n        case userType.LOGIN_FAILURE:\r\n            return {};\r\n        case userType.LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","import {userType} from '../actions/types';\r\nlet voters=JSON.parse(localStorage.getItem('users'));\r\nconst initialState=voters?{voters}:{};\r\n\r\nexport function voter(state=initialState, action){\r\n    switch(action.type){\r\n        case userType.GET_ALL_SUCCESS:\r\n            return {\r\n                voters:action.users\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","const rinkeby = '0x45E306046fb5eCC8a86447B270c089A6EdF1f2AB';\r\n// const rinkeby = '0x09E521061D9dC7402c902C9B927C82D07fB0E00E';   // My address \r\n// const ropsten=  '0xEaeA5493054Afe857cC4B6305562b1A4a284F36A';\r\nconst ropsten = '0xFC6664df6f5da0E4bB306aEE4a881D80ADD2D55b';\r\nconst ganache = '0x14305CD19203Ce8472911746Ea9EBfFDEa9A0073';\r\nconst mainnet = '0x44883b9934eAf9669AaF6E1629cE7cF08CE70826';\r\n\r\nexport function electionContractAddress(state=ropsten, action){\r\n    switch(action.type){\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n","let valStr = localStorage.getItem('isAdmin');\r\nconst initialState = (valStr==='true' ) ? {isAdmin:true}:{isAdmin:false};\r\n\r\nexport function adminInfo (state=initialState, action){\r\n    switch(action.type){\r\n        case 'admin':\r\n            return {\r\n                isAdmin:action.val\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n     \r\n}","const item = JSON.parse(localStorage.getItem('selectedItem'));\r\nconst initialState = item ? {selectedId:item.selectedId, selectedName:item.selectedName} : {};\r\nexport function selectionInfo(state=initialState,action){\r\n    switch(action.type){\r\n        case \"selected\":\r\n            return {\r\n                selectedId:action.item.selectedId,\r\n                selectedName:action.item.selectedName\r\n            };\r\n        case 'clear':\r\n            return{\r\n               \r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport {alert} from './alert.reducer.js';\r\nimport {authentication} from './authentication.reducer';\r\nimport {registeration} from './registeration.reducer';\r\nimport {voter} from './voter.reducer'\r\nimport { electionContractAddress } from './contractAddress.reducer.js';\r\nimport {adminInfo} from './admin.reducer';\r\nimport {forgotEmail} from './forgotEmail.reducer';\r\nimport {pageInfo} from './pageInfo.reducer';\r\nimport {selectionInfo} from './selection.reducer';\r\n\r\nconst rootRudecer= combineReducers({\r\n    alert,\r\n    authentication,\r\n    registeration,\r\n    electionContractAddress,\r\n    adminInfo,\r\n    forgotEmail,\r\n    pageInfo,\r\n    selectionInfo,\r\n    voter\r\n})\r\nexport default rootRudecer;","import {alertType} from '../actions/types';\r\n\r\nexport function alert(state={}, action){\r\n    switch(action.type){\r\n        case alertType.SUCCESS:\r\n            return {\r\n                type:'success',\r\n                message:action.message\r\n            };\r\n        case alertType.ERROR:\r\n            return {\r\n                type:'error',\r\n                message:action.message\r\n            };\r\n        case alertType.CLEAR:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","import {userType} from '../actions/types';\r\n\r\nexport function registeration(state={}, action){\r\n    switch(action.type){\r\n        case userType.REGISTER_REQUEST:\r\n            return {\r\n                registering:true\r\n            };\r\n        case userType.REGISTER_SUCCESS:\r\n            return {\r\n                registered:true\r\n            };\r\n        case userType.REGISTER_FAILURE:\r\n            return {};\r\n        case userType.LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nexport function forgotEmail(state={},action){\r\n    switch(action.type){\r\n        case 'email':\r\n            return {forgotEmail:action.email};\r\n        case 'clear':\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nexport function pageInfo(state=\"\", action){\r\n    switch(action.type){\r\n        case 'pageName':\r\n            return{\r\n                pageName:action.name\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore,applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nimport { createLogger } from 'redux-logger';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","export const adminActions={\r\n    isAdmin\r\n}\r\nfunction isAdmin(val){\r\n    if(val){\r\n        localStorage.setItem('isAdmin','true');\r\n        return {type:'admin', val};\r\n    } else{\r\n        localStorage.setItem('isAdmin','false');\r\n        return {type:'admin', val};\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Particles from \"react-particles-js\";\r\n\r\nclass Canvas extends Component {\r\n  state = { width: \"0px\", height: \"0px\" };\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n  updateWindowDimensions = () => {\r\n    this.setState({\r\n      width: `${window.innerWidth - 17}px`,\r\n      height: `${window.innerHeight}px`\r\n    });\r\n  };\r\n  render() {\r\n    const { width, height } = this.state;\r\n    console.log(width, height);\r\n    return (\r\n      <Particles\r\n        {...this.state}\r\n        params={{\r\n          \"particles\": {\r\n          \"number\": {\r\n            \"value\": 80,\r\n            \"density\": {\r\n              \"enable\": true,\r\n              \"value_area\": 800\r\n            }\r\n          },\r\n          \"color\": {\r\n            \"value\": \"#ffffff\"\r\n          },\r\n          \"shape\": {\r\n            \"type\": \"circle\",\r\n            \"stroke\": {\r\n              \"width\": 0,\r\n              \"color\": \"#000000\"\r\n            },\r\n            \"polygon\": {\r\n              \"nb_sides\": 5\r\n            },\r\n            \"image\": {\r\n              \"src\": \"img/github.svg\",\r\n              \"width\": 100,\r\n              \"height\": 100\r\n            }\r\n          },\r\n          \"opacity\": {\r\n            \"value\": 0.5,\r\n            \"random\": false,\r\n            \"anim\": {\r\n              \"enable\": false,\r\n              \"speed\": 1,\r\n              \"opacity_min\": 0.1,\r\n              \"sync\": false\r\n            }\r\n          },\r\n          \"size\": {\r\n            \"value\": 3,\r\n            \"random\": true,\r\n            \"anim\": {\r\n              \"enable\": false,\r\n              \"speed\": 20,\r\n              \"size_min\": 0.1,\r\n              \"sync\": false\r\n            }\r\n          },\r\n          \"line_linked\": {\r\n            \"enable\": true,\r\n            \"distance\": 150,\r\n            \"color\": \"#ffffff\",\r\n            \"opacity\": 0.4,\r\n            \"width\": 1\r\n          },\r\n          \"move\": {\r\n            \"enable\": true,\r\n            \"speed\": 1,\r\n            \"direction\": \"none\",\r\n            \"random\": false,\r\n            \"straight\": false,\r\n            \"out_mode\": \"out\",\r\n            \"bounce\": false,\r\n            \"attract\": {\r\n              \"enable\": false,\r\n              \"rotateX\": 600,\r\n              \"rotateY\": 1200\r\n            }\r\n          }\r\n        },\r\n        \"interactivity\": {\r\n          \"detect_on\": \"canvas\",\r\n          \"events\": {\r\n            \"onhover\": {\r\n              \"enable\": true,\r\n              \"mode\": \"grab\"\r\n            },\r\n            \"onclick\": {\r\n              \"enable\": false,\r\n              \"mode\": \"push\"\r\n            },\r\n            \"resize\": true\r\n          },\r\n          \"modes\": {\r\n            \"grab\": {\r\n              \"distance\": 140,\r\n              \"line_linked\": {\r\n                \"opacity\": 1\r\n              }\r\n            },\r\n            \"bubble\": {\r\n              \"distance\": 400,\r\n              \"size\": 40,\r\n              \"duration\": 2,\r\n              \"opacity\": 8,\r\n              \"speed\": 3\r\n            },\r\n            \"repulse\": {\r\n              \"distance\": 200,\r\n              \"duration\": 0.4\r\n            },\r\n            \"push\": {\r\n              \"particles_nb\": 4\r\n            },\r\n            \"remove\": {\r\n              \"particles_nb\": 2\r\n            }\r\n          }\r\n        },\r\n        \"retina_detect\": true\r\n        }}\r\n        \r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import {alertType} from './types';\r\n\r\nexport const alertActions={\r\n    success,\r\n    error,\r\n    clear\r\n}\r\n\r\nfunction success(message){\r\n    return {type:alertType.SUCCESS,message};\r\n}\r\nfunction error(message){\r\n    return {type:alertType.ERROR,message};\r\n}\r\nfunction clear(){\r\n    return {type:alertType.CLEAR};\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { alertActions } from \"../../actions/alert.action\";\r\nimport { userActions } from \"../../actions/user.action\";\r\nimport { adminActions } from \"../../actions/admin.action\";\r\nimport { \r\n    makeStyles,\r\n    Grid,\r\n    Typography, \r\n    Button,\r\n    TextField,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Avatar,\r\n    InputAdornment,\r\n    Snackbar,\r\n    FormHelperText,\r\n    CssBaseline,\r\n    Divider,\r\n    Box,\r\n    Fade,\r\n    Backdrop,\r\n    Modal\r\n} from \"@material-ui/core\";\r\nimport {\r\n    AccountBox,\r\n    Email\r\n} from '@material-ui/icons';\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport isEmpty from 'is-empty';\r\nimport Webcam from 'react-webcam';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport MarkEmailReadIcon from '@mui/icons-material/MarkEmailRead';\r\nimport http from '../../http.comon';\r\nimport {forgotEmailActions} from '../../actions/forgotEmail.action';\r\nimport { pageActions } from \"../../actions/pageInfo.action\";\r\nimport Particles from '../Particles'\r\n\r\nconst videoConstraints = {\r\n    width:1280,\r\n    height:720,\r\n    facingMode:\"user\"\r\n  };\r\n\r\nconst Alert=React.forwardRef(function Alert(props, ref){\r\n    return  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}/>\r\n  });\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        // backgroundColor:\"#071722\",\r\n        backgroundImage: `url('./image/background.jpg')`,\r\n        flexGrow: 1,\r\n        paddingTop: '150px',\r\n    },\r\n    drawerHeader:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(1,1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        // justifyContent: 'flex-start',\r\n        backgroundColor:\"#071722\",\r\n        width:\"100%\",\r\n    },\r\n    createButton:{\r\n        position:\"relative\",\r\n        backgroundColor:\"#00aa00\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#007700',\r\n        },\r\n        width:\"98%\",\r\n        height:'40px',\r\n        margin:theme.spacing(1,1,1,1),\r\n    },\r\n    paper: {\r\n      margin: '10%',\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      \r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      paddingBottom:'10%',\r\n    },\r\n    submit: {\r\n      width:\"100%\",\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    linkButton:{\r\n        \r\n        backgroundColor:'transparent',\r\n        color:'#0000ff',\r\n        '&:hover':{\r\n            backgroundColor:'trasparent',\r\n            color:'#ff0000',\r\n            textDecoration:'underline',\r\n        },\r\n        width:\"100%\",\r\n        textDecoration:'underline',\r\n    }\r\n}));\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: \"60%\",\r\n    \r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    borderRadius:\"0.5em\",\r\n    p: 4,\r\n  };\r\n  \r\nexport default function VoterLoginPage() {\r\n    \r\n    const classes=useStyles();\r\n    const history=useHistory();\r\n    const alertContent = useSelector(state=>state.alert);\r\n    const loggedIn = useSelector(state=>state.authentication.loggedIn);\r\n    const loggingIn = useSelector(state=>state.authentication.loggingIn);\r\n\r\n    const webcamRef=React.useRef(null);\r\n    const [image, setImage] = useState(null);\r\n    const [webCamEnable, setWebCamEnable] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [open, setOpen]=useState(false);\r\n    const [dlgOpen, setDlgOpen] = useState(false);\r\n    const [mailDlgOpen, setMailDlgOpen] = useState(false);\r\n    const [inputs, setInputs]=useState({\r\n        username:\"\",\r\n        password:\"\"\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const {username, password} = inputs;\r\n    const [user, setUser] = useState({});\r\n    const [code, setCode] = useState('');\r\n    const [vcode, setVcode]=useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [forgotEmail, setForgotEmail] = useState('');\r\n    useEffect(()=>{\r\n        dispatch(userActions.logout());\r\n        dispatch(alertActions.clear());\r\n        dispatch(adminActions.isAdmin(false));\r\n        dispatch(pageActions.setPageName('voterlogin'));\r\n    },[]);\r\n\r\n    const handleAddressChange=(e)=>{\r\n        setAddress(e.target.value);\r\n    }\r\n    const handleSendToEmail=()=>{\r\n        if(!address){\r\n            dispatch(alertActions.error('Please enter your email address.'));\r\n            setOpen(true);\r\n            return;\r\n        }\r\n\r\n        http.post('/auth/user/send-email',{email:address})\r\n            .then(res=>{\r\n                console.log(res);\r\n                const {email, verificationCode} = res.data;\r\n                setForgotEmail(email);\r\n                setVcode(verificationCode);\r\n                setMailDlgOpen(false);\r\n                setDlgOpen(true);\r\n                setCode('');\r\n\r\n            },error=>{\r\n                dispatch(alertActions.error(error.response.data));\r\n                setOpen(true);\r\n                setAddress('');\r\n                console.log(error);\r\n            });\r\n      \r\n    }\r\n    const handleResetCancel=()=>{\r\n        setMailDlgOpen(false);\r\n        setAddress('');\r\n    }\r\n    const handleToSignup=()=>{\r\n        history.push('/voter-register');\r\n    }\r\n    /**\r\n     * open email modal to enter email to be use reset password\r\n     */\r\n\r\n    const handleToForgotPassword=()=>{\r\n        setAddress('');\r\n        setMailDlgOpen(true);\r\n    }\r\n    /**\r\n     * compare verification code and user enter code\r\n     * if true, open forgot password page\r\n     * @returns \r\n     */\r\n    const handleConfirm=()=>{\r\n        if(!code){\r\n          dispatch(alertActions.error('Please enter verification code from your email.'));\r\n          setOpen(true);\r\n          return;\r\n        }\r\n        if(code==vcode){\r\n            dispatch(forgotEmailActions.setForgotEmail(forgotEmail));\r\n            setForgotEmail('');\r\n            setDlgOpen(false);\r\n            setVcode('');\r\n            setCode('');\r\n            history.push('/forgot-password');\r\n  \r\n        } else{\r\n          dispatch(alertActions.error('Incorrect verification code'));\r\n          setCode('');\r\n          setOpen(true);\r\n        }\r\n        \r\n  \r\n      }\r\n    /**\r\n     * cancel email verification code confirm\r\n     */\r\n    const handleVerificationCancel=()=>{\r\n        setVcode('');\r\n        setDlgOpen(false);\r\n    }\r\n    /**\r\n     * enter user code from own email.\r\n     * @param {*} e \r\n     */\r\n    const handleCodeChange=(e)=>{\r\n        const val=e.target.value;\r\n        setCode(val);\r\n    }\r\n    const capture = React.useCallback(\r\n      ()=>{\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        // const imageSrc = './image/driver.png';\r\n\r\n        setImage(imageSrc);\r\n      },\r\n      [webcamRef]\r\n    );\r\n    /**\r\n     * close alert dialog.\r\n     * @param {*} event \r\n     * @param {*} reason \r\n     * @returns \r\n     */\r\n    const handleClose=(event,reason)=>{\r\n        if(reason===\"clickaway\"){\r\n          return;\r\n        }\r\n        setOpen(false);\r\n    }\r\n    /**\r\n     * submit login informations\r\n     * @returns \r\n     */\r\n    const handleSubmit=()=>{\r\n        setSubmitted(true);\r\n        if(username && password){\r\n            // if(image==null)\r\n            // {\r\n            //     dispatch(alertActions.error(\"Please turn on your camera and take a photo from yourself.\"));\r\n            //     setOpen(true);\r\n            //     return;\r\n            // }\r\n            const base64Image = Buffer.from(image).toString().replace(/^data:image\\/png;base64,/, \"\");\r\n           \r\n            const userData = {\r\n                username:username,\r\n                password:password,\r\n                base64Image:base64Image\r\n            }\r\n\r\n            dispatch(userActions.login(userData));\r\n            dispatch(alertActions.clear());\r\n            // setWebCamEnable(false);\r\n            setOpen(true);\r\n        }\r\n    }\r\n    /**\r\n     * enter username and password on login page\r\n     * @param {*} e \r\n     */\r\n    const handleChange=(e)=>{\r\n        const {name, value}=e.target;\r\n        setInputs(inputs=>({...inputs, [name]:value}));\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n              <Snackbar open={!isEmpty(alertContent) && open} autoHideDuration={6000} onClose={handleClose}>\r\n                  <Alert onClose={handleClose} severity={alertContent.type} sx={{width:'100%'}}>\r\n                  {alertContent.message}\r\n                  </Alert>\r\n              </Snackbar>\r\n            }\r\n            <Particles/>\r\n\r\n            <Grid container className={classes.root} justifyContent=\"center\" alignItems=\"center\">\r\n                {loggedIn ? history.push('/elections') : ''}\r\n                {/* <Grid className={classes.drawerHeader}/> */}\r\n                \r\n                <Grid container>\r\n                    <Grid container item xs={12} sm={7} md={7} justifyContent=\"center\">\r\n                        <Grid container justifyContent=\"center\" style={{backgroundColor:\"#fff\",width:\"80%\",height:\"90%\", borderRadius:\"0.35em\"}}>\r\n                            <Grid className={classes.paper}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Sign in\r\n                                </Typography>\r\n                                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"username\"\r\n                                        label=\"User Name\"\r\n                                        name=\"username\"\r\n                                        autoComplete=\"username\"\r\n                                        autoFocus\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                              <InputAdornment position=\"start\">\r\n                                                <AccountBox />\r\n                                              </InputAdornment>\r\n                                            ),\r\n                                          }}\r\n                                        value={username} onChange={handleChange}\r\n                                    />\r\n                                     {submitted && !username && <FormHelperText error>Required user name</FormHelperText>}\r\n                                \r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                              <InputAdornment position=\"start\">\r\n                                                <Email />\r\n                                              </InputAdornment>\r\n                                            ),\r\n                                          }}\r\n                                        value={password} onChange={handleChange}\r\n                                    />\r\n                                    {submitted && !password && <FormHelperText error>Required password</FormHelperText>}\r\n                                \r\n                                    <FormControlLabel\r\n                                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                        label=\"Remember me\"\r\n                                    />\r\n                                    <Button\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.submit}\r\n                                        onClick={(e)=>handleSubmit(e)}\r\n                                    >\r\n                                        Sign In\r\n                                    </Button>\r\n                                    \r\n                                    <Grid container style={{marginTop:\"normal\"}}>\r\n                                        <Grid container justifyContent=\"center\" item md={5}>\r\n                                            <Button \r\n                                            className={classes.linkButton} \r\n                                            style={{textTransform:\"none\", backgroundColor:\"transparent\"}}\r\n                                            onClick={handleToForgotPassword}>\r\n                                                Forgot password?\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid container  justifyContent=\"center\"  item md={7}>\r\n                                            <Button \r\n                                            className={classes.linkButton} \r\n                                            style={{textTransform:\"none\", backgroundColor:\"transparent\"}}\r\n                                            onClick={handleToSignup}>\r\n                                                Don't have an account? Sign Up\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    {\r\n                                      loggingIn &&\r\n                                      <Grid container style={{width:\"100%\"}}>\r\n                                        <LinearProgress style={{padding:\"0.2vw\",width:\"100%\", marginTop:'2vh'}}/>\r\n                                      </Grid>\r\n                                    }\r\n                                </form>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    <Grid  container item xs={12} sm={5} md={5} justifyContent=\"center\" style={{height:\"90vh\"}} alignItems=\"center\">\r\n                        <Grid container justifyContent=\"center\" alignItems=\"center\" style={{width:'90%'}}>\r\n                            <Grid container   style={{backgroundColor:\"#fff\",width:\"90%\", minHeight:\"90%\", borderRadius:\"0.35em\"}}>\r\n                                <Grid container justifyContent=\"center\" style={{marginTop:\"2vh\"}}>\r\n                                  { webCamEnable &&\r\n                                     <Webcam \r\n                                      audio={false}\r\n                                      ref={webcamRef} \r\n                                      screenshotFormat=\"image/png\"\r\n                                      videoConstraints={videoConstraints}  \r\n                                      style={{width:\"98%\", height:\"98%\"}}\r\n                                      />\r\n                                  }\r\n                                  \r\n                                </Grid>\r\n                                <Grid container justifyContent=\"center\">\r\n                                  <Button className={classes.createButton} onClick={capture}>\r\n                                    Take Photo   \r\n                                  </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                           \r\n                        </Grid>\r\n                        { !isEmpty(image) &&\r\n                            <Grid container justifyContent=\"center\" alignItems=\"center\" style={{marginTop:\"2vh\",width:'90%'}}>\r\n                                <Grid container justifyContent=\"center\" alignItems=\"center\" style={{backgroundColor:\"#fff\",width:\"90%\",minHeight:\"90%\", marginBottom:\"0vh\", borderRadius:\"0.35em\"}}>\r\n                                    <img src={image} style={{width:\"98%\", height:\"98%\"}}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                        \r\n                    \r\n                </Grid>\r\n                <Grid item >\r\n\r\n                \r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    open={mailDlgOpen}\r\n                    onClose={handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                   \r\n                >\r\n                    <Fade in={mailDlgOpen}>\r\n                    <Box sx={style}>\r\n                      <Grid container justifyContent=\"center\" >\r\n                            <CssBaseline/>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Typography variant=\"body1\">\r\n                                    Please enter your email address.\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Divider style={{width:\"100%\"}}/>\r\n                            <Grid container justifyContent=\"center\" item md={12} style={{width:\"70%\", paddingTop:\"20px\"}}>\r\n                                <form className={classes.form}>\r\n                                    \r\n                                    <Grid container>\r\n                                        <Grid  container justifyContent=\"center\" >\r\n                                            <TextField\r\n                                                variant=\"outlined\"\r\n                                                label=\"Email Address\"\r\n                                                required\r\n                                                fullWidth\r\n                                                className={classes.textField}\r\n                                                value={address}\r\n                                                onChange={handleAddressChange}\r\n                                            />\r\n                                        </Grid>\r\n                                        \r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Grid container item md={6} justifyContent=\"center\"> \r\n                                            <Button className={classes.createButton} onClick={handleSendToEmail}>\r\n                                                Send     \r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid container item md={6} justifyContent=\"center\">\r\n                                            <Button className={classes.createButton} onClick={handleResetCancel}>\r\n                                                Cancel\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                            </Grid>\r\n                        </Grid>\r\n                      </Box>\r\n                    </Fade>\r\n                </Modal>\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    open={dlgOpen}\r\n                    onClose={handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                   \r\n                >\r\n                    <Fade in={dlgOpen}>\r\n                    <Box sx={style}>\r\n                      <Grid container justifyContent=\"center\" >\r\n                            <CssBaseline/>\r\n                            <Grid container alignItems=\"center\">\r\n                                <MarkEmailReadIcon color=\"primary\" style={{marginLeft:\"8vw\",fontSize:64}}/>\r\n                                <Typography variant=\"h5\">\r\n                                    Email Verification\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Divider style={{width:\"100%\"}}/>\r\n                            <Grid container justifyContent=\"center\" item md={12} style={{width:\"70%\", paddingTop:\"20px\"}}>\r\n                                <form className={classes.form}>\r\n                                    <Grid container>\r\n                                        <Grid  container justifyContent=\"center\" >\r\n                                            <Typography variant=\"body2\" style={{padding:'1vw'}}>\r\n                                                We sent verification code to your email. Please enter code.\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        \r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Grid  container justifyContent=\"center\" >\r\n                                            <TextField\r\n                                                variant=\"outlined\"\r\n                                                label=\"Verification Code\"\r\n                                                required\r\n                                                fullWidth\r\n                                                className={classes.textField}\r\n                                                value={code}\r\n                                                onChange={handleCodeChange}\r\n                                            />\r\n                                        </Grid>\r\n                                        \r\n                                    </Grid>\r\n                                    <Grid container>\r\n                                        <Grid container item md={6} justifyContent=\"center\"> \r\n                                            <Button className={classes.createButton} onClick={handleConfirm}>\r\n                                                Confirm     \r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid container item md={6} justifyContent=\"center\">\r\n                                            <Button className={classes.createButton} onClick={handleVerificationCancel}>\r\n                                                Cancel\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                            </Grid>\r\n                        </Grid>\r\n                      </Box>\r\n                    </Fade>\r\n                </Modal>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","export const forgotEmailActions={\r\n    setForgotEmail,\r\n    clear\r\n}\r\nfunction setForgotEmail(email){\r\n    return {type:'email', email}\r\n}\r\nfunction clear(){\r\n    return {type:'clear'};\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport { useHistory} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userActions } from \"../../actions/user.action\";\r\nimport { alertActions } from \"../../actions/alert.action\";\r\nimport isEmpty from \"is-empty\";\r\nimport Webcam from 'react-webcam';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nimport { \r\n    makeStyles,\r\n    Grid,\r\n    Typography, \r\n    Button,\r\n    TextField,\r\n    FormHelperText,\r\n    Avatar,\r\n    InputAdornment,\r\n    Snackbar,\r\n    Box,\r\n    Paper,\r\n    CssBaseline,\r\n    Divider,\r\n    Modal,\r\n    Backdrop,\r\n    Fade,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n    AccountBox,\r\n    Email,\r\n    Phone,\r\n    ContactMail,\r\n    Lock\r\n} from \"@material-ui/icons\";\r\nimport MarkEmailReadIcon from '@mui/icons-material/MarkEmailRead';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport http from '../../http.comon';\r\nimport { pageActions } from \"../../actions/pageInfo.action\";\r\nimport Particles from '../Particles'\r\nimport getWeb3 from \"../../getWeb3\";\r\n\r\n\r\nconst Alert=React.forwardRef(function Alert(props, ref){\r\n  return  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}/>\r\n});\r\n\r\nconst videoConstraints = {\r\n  width:1280,\r\n  height:720,\r\n  facingMode:\"user\"\r\n};\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        // backgroundColor:\"#071722\",\r\n        backgroundImage: `url('./image/background.jpg')`,\r\n        flexGrow: 1,\r\n    },\r\n    drawerHeader:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0,1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        // justifyContent: 'flex-start',\r\n        backgroundColor:\"#071722\",\r\n        width:\"100%\",\r\n    },\r\n    createButton:{\r\n        position:\"relative\",\r\n        backgroundColor:\"#00aa00\",\r\n        color:\"#fff\",\r\n        '&:hover': {\r\n            backgroundColor: '#007700',\r\n        },\r\n        \r\n        margin:theme.spacing(1,1,1,1),\r\n        width:'98%',\r\n        height:'40px',\r\n    },\r\n    paper: {\r\n      margin: '10%',\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      width:\"98%\",\r\n      margin: theme.spacing(3, 0, 0, 0),\r\n    },\r\n    modalGrid:{\r\n      margin:'10%',\r\n    }\r\n}));\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"60%\",\r\n  \r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  borderRadius:\"0.5em\",\r\n  p: 4,\r\n};\r\n\r\nexport default function VoterRegisterPage() {\r\n    const classes=useStyles();\r\n    const history=useHistory();\r\n    const webcamRef=React.useRef(null);\r\n    const [image, setImage] = useState(null);\r\n    const [webCamEnable, setWebCamEnable] = useState(true);\r\n    const [code, setCode] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isVerified, setIsVerified] = useState(false);\r\n    const [open, setOpen]=useState(false);\r\n    const [voter, setVoter] = useState({\r\n        name:'',\r\n        username:'',\r\n        email:'',\r\n        phone:'',\r\n        address:'',\r\n        password:'',\r\n        photo:null,\r\n    });\r\n\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n\r\n    const alertContent = useSelector(state=>state.alert);\r\n    const registered = useSelector(state=>state.registeration.registered);\r\n    const registering = useSelector(state=>state.registeration.registering);\r\n\r\n    const dispatch = useDispatch();\r\n    const [dlgOpen, setDlgOpen] = useState(false);\r\n    const [user, setUser] = useState({});\r\n    const [vcode, setVcode] = useState('');\r\n\r\n    useEffect(()=>{\r\n      dispatch(userActions.logout());\r\n      dispatch(alertActions.clear());\r\n      dispatch(pageActions.setPageName('voterregister'));\r\n      checkMetaMask();\r\n    },[]);\r\n\r\n    const checkMetaMask = async() => {\r\n      try{\r\n        const web3 = await getWeb3();\r\n        await web3.eth.requestAccounts();\r\n        const accounts = await web3.eth.getAccounts();\r\n           \r\n        if(accounts.length>0){\r\n            \r\n            setCurrentAccount(accounts[0]);\r\n        }\r\n      } catch (error){\r\n        dispatch(alertActions.error(\"Can't found MetaMask. Please install MetaMask or unlock Metask.\"));\r\n        setOpen(true);\r\n      }\r\n    }\r\n\r\n    const handleConfirm=()=>{\r\n      if(!code){\r\n        dispatch(alertActions.error('Please enter verification code from your email.'));\r\n        setOpen(true);\r\n        return;\r\n      }\r\n      if(code==vcode){  // code == vcode\r\n       \r\n        const newVoter = user;\r\n        newVoter.verified=true;\r\n\r\n        dispatch(userActions.register(newVoter));\r\n        dispatch(alertActions.clear());\r\n        \r\n        setOpen(true);\r\n        // setWebCamEnable(false);\r\n        setDlgOpen(false);\r\n        setVcode('');\r\n        setCode('');\r\n\r\n      } else{\r\n        dispatch(alertActions.error('Incorrect verification code'));\r\n        setCode('');\r\n        setOpen(true);\r\n      }\r\n    }\r\n    const handleVerificationCancel=()=>{\r\n      setVcode('');\r\n      setDlgOpen(false);\r\n    }\r\n    const handleCodeChange=(e)=>{\r\n      const val=e.target.value;\r\n      setCode(val);\r\n    }\r\n    const capture = React.useCallback(\r\n      ()=>{\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        // const imageSrc = './image/driver.png';\r\n        setImage(imageSrc);\r\n      },\r\n      [webcamRef]\r\n    );\r\n\r\n    /**\r\n     * close opened alert\r\n     * @param {*} event \r\n     * @param {*} reason \r\n     * @returns void\r\n     */\r\n    const handleClose=(event,reason)=>{\r\n      if(reason===\"clickaway\"){\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    }\r\n    /**\r\n     * submit voter data inputed\r\n     */\r\n    const handleSubmit=()=>{\r\n      try{\r\n        if(currentAccount)\r\n        {\r\n          setSubmitted(true);\r\n          if( voter.name && voter.username && voter.email && voter.phone && voter.address && voter.password){\r\n            if(image==null)\r\n            {\r\n              dispatch(alertActions.error(\"Please turn on your camera and take a photo from yourself.\"));\r\n              setOpen(true);\r\n              return;\r\n            }\r\n            const base64Image = Buffer.from(image).toString().replace(/^data:image\\/png;base64,/, \"\");\r\n            \r\n            const newVoter={\r\n              name:voter.name,\r\n              username:voter.username,\r\n              email:voter.email,\r\n              phone:voter.phone,\r\n              address:voter.address,\r\n              password:voter.password,\r\n              base64Image:base64Image,\r\n              luxandId:0,\r\n              walletaccount:currentAccount,\r\n              verified:false\r\n            }\r\n            setEmail(newVoter.email);\r\n            setUser(newVoter);\r\n\r\n            http.post('/auth/user/verify-email',{name:voter.name, email:voter.email})\r\n            .then(res=>{\r\n              console.log(res);\r\n              const {email, verificationCode} = res.data;\r\n              setVcode(verificationCode);\r\n              \r\n            },error=>{\r\n              dispatch(alertActions.error(error.toString()));\r\n              setOpen(true);\r\n            })\r\n            \r\n            setDlgOpen(true);\r\n          }\r\n        }\r\n\r\n      } catch (error){\r\n        dispatch(alertActions.error(\"Some errors occurred while connecting your wallet1.\"));\r\n        setOpen(true);\r\n      } \r\n    }\r\n    /**\r\n     * get value user input from input\r\n     * @param {*} e \r\n     */\r\n    const handleChange=(e)=>{\r\n        const {name, value}=e.target;\r\n        setVoter(voter=>({...voter, [name]:value}));\r\n    }\r\n    /**\r\n     * redirect to login page\r\n     */\r\n    const handleCancel=()=>{\r\n        history.push('/voter-login');\r\n    }\r\n    return(\r\n        <>\r\n            {\r\n              <Snackbar open={!isEmpty(alertContent) && open} autoHideDuration={6000} onClose={handleClose}>\r\n                  <Alert onClose={handleClose} severity={alertContent.type} sx={{width:'100%'}}>\r\n                  {alertContent.message}\r\n                  </Alert>\r\n              </Snackbar>\r\n            }\r\n\r\n            <Particles/>\r\n\r\n            <Grid container className={classes.root} justifyContent=\"center\" alignItems=\"center\">\r\n                {registered?history.push(\"/voter-login\"):\"\"}\r\n          \r\n                {/* <Grid className={classes.drawerHeader}/> */}\r\n                <Grid container>\r\n                    <Grid container item sm={7} md={7} justifyContent=\"center\">\r\n                        <Grid style={{backgroundColor:\"#fff\",width:\"80%\", borderRadius:\"0.35em\", margin:\"10%\"}}>\r\n                            <Grid className={classes.paper}>\r\n                                <Avatar className={classes.avatar}>\r\n                                <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Register\r\n                                </Typography>\r\n                                <form name=\"form\" onSubmit={handleSubmit} className={classes.form}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"name\"\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        autoComplete=\"name\"\r\n                                        autoFocus\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                              <InputAdornment position=\"start\">\r\n                                                <AccountBox />\r\n                                              </InputAdornment>\r\n                                            ),\r\n                                          }}\r\n                                       \r\n                                        value={voter.name} onChange={handleChange}\r\n                                    />\r\n                                    {submitted && !voter.name && <FormHelperText error>Required Name</FormHelperText>}\r\n                                \r\n                                    <TextField\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        margin-right=\"2px\"\r\n                                        required\r\n                                        \r\n                                        name=\"username\"\r\n                                        label=\"User Name\"\r\n                                        id=\"username\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                              <InputAdornment position=\"start\">\r\n                                                <AccountBox />\r\n                                              </InputAdornment>\r\n                                            ),\r\n                                          }}\r\n                                        \r\n                                        value={voter.username} onChange={handleChange}\r\n                                    />\r\n                                    {submitted && !voter.username && <FormHelperText error>Required User Name</FormHelperText>}\r\n                                     \r\n                                    <TextField\r\n                                    \r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"email\"\r\n                                        label=\"Email Address\"\r\n                                        name=\"email\"\r\n                                        autoComplete=\"email\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                              <InputAdornment position=\"start\">\r\n                                                <Email />\r\n                                              </InputAdornment>\r\n                                            ),\r\n                                          }}\r\n                                        \r\n                                        value={voter.email} onChange={handleChange}\r\n                                    />\r\n                                    {submitted && !voter.email && <FormHelperText error>Required Email Address</FormHelperText>}\r\n                                    <TextField\r\n                                    \r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"phone\"\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        autoComplete=\"phone\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                              <InputAdornment position=\"start\">\r\n                                                <Phone />\r\n                                              </InputAdornment>\r\n                                            ),\r\n                                          }}\r\n                                        \r\n                                        value={voter.phone} onChange={handleChange}\r\n                                    />\r\n                                    {submitted && !voter.phone && <FormHelperText error>Required Phone Number</FormHelperText>}\r\n                                    <TextField\r\n                                    \r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"address\"\r\n                                        label=\"Address\"\r\n                                        name=\"address\"\r\n                                        autoComplete=\"address\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                              <InputAdornment position=\"start\">\r\n                                                <ContactMail />\r\n                                              </InputAdornment>\r\n                                            ),\r\n                                          }}\r\n                                        \r\n                                        value={voter.address} onChange={handleChange}\r\n                                    />\r\n                                    {submitted && !voter.address && <FormHelperText error>Required Address</FormHelperText>}\r\n\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                              <InputAdornment position=\"start\">\r\n                                                <Lock />\r\n                                              </InputAdornment>\r\n                                            ),\r\n                                          }}\r\n                                        \r\n                                        value={voter.password} onChange={handleChange}\r\n                                    />\r\n                                    {submitted && !voter.password && <FormHelperText error>Required Password</FormHelperText>}\r\n                                    <Grid container>\r\n                                        <Grid container justifyContent=\"center\" item md={6}>\r\n                                            <Button\r\n                                                fullWidth\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                className={classes.submit}\r\n                                                onClick={(e)=>handleSubmit(e)}\r\n                                            >\r\n\r\n                                                Sign up\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid container justifyContent=\"center\" item md={6}>\r\n                                            <Button\r\n                                                fullWidth\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                className={classes.submit}\r\n                                                onClick={(e)=>handleCancel(e)}\r\n                                            >\r\n                                                Cancel\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    {\r\n                                      registering &&\r\n                                      <Grid container style={{width:\"100%\"}}>\r\n                                        <LinearProgress style={{padding:\"0.2vw\",width:\"100%\", marginTop:'2vh'}}/>\r\n                                      </Grid>\r\n                                    }\r\n                                   \r\n                                </form>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    <Grid  container item sm={5} md={5} justifyContent=\"center\" style={{height:\"90vh\"}} alignItems=\"center\">\r\n                        <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                            <Grid container   style={{backgroundColor:\"#fff\",width:\"90%\", minHeight:\"90%\", borderRadius:\"0.35em\"}}>\r\n                                <Grid container justifyContent=\"center\" style={{marginTop:\"2vh\"}}>\r\n                                  { webCamEnable &&\r\n                                     <Webcam \r\n                                      audio={false}\r\n                                      ref={webcamRef} \r\n                                      screenshotFormat=\"image/png\"\r\n                                      videoConstraints={videoConstraints}  \r\n                                      style={{width:\"98%\", height:\"98%\"}}\r\n                                      /> \r\n                                  }\r\n                                </Grid>\r\n                                <Grid container justifyContent=\"center\">\r\n                                  <Button className={classes.createButton} onClick={capture}>\r\n                                    Take Photo   \r\n                                  </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                           \r\n                        </Grid>\r\n                        { \r\n                          !isEmpty(image) &&\r\n                          <Grid container justifyContent=\"center\" alignItems=\"center\" style={{marginTop:\"2vh\", zIndex:'1'}}>\r\n                              <Grid container justifyContent=\"center\" alignItems=\"center\" style={{backgroundColor:\"#fff\",width:\"90%\",minHeight:\"90%\", marginBottom:\"0vh\", borderRadius:\"0.35em\"}}>\r\n                                  <img src={image} style={{width:\"98%\", height:\"98%\"}}/>\r\n                              </Grid>\r\n                          </Grid>\r\n                        }\r\n                    </Grid>\r\n                        \r\n                    \r\n                </Grid>\r\n                \r\n                  <Modal\r\n                      aria-labelledby=\"transition-modal-title\"\r\n                      aria-describedby=\"transition-modal-description\"\r\n                      open={dlgOpen}\r\n                      onClose={handleClose}\r\n                      closeAfterTransition\r\n                      BackdropComponent={Backdrop}\r\n                      BackdropProps={{\r\n                      timeout: 500,\r\n                      }}\r\n                    \r\n                  >\r\n                      <Fade in={dlgOpen}>\r\n                      <Box sx={style}>\r\n                        <Grid container justifyContent=\"center\" >\r\n                              <CssBaseline/>\r\n                              <Grid container alignItems=\"center\">\r\n                                  <MarkEmailReadIcon color=\"primary\" style={{marginLeft:\"8vw\",fontSize:64}}/>\r\n                                  <Typography variant=\"h5\">\r\n                                      Email Verification\r\n                                  </Typography>\r\n                              </Grid>\r\n                              <Divider style={{width:\"100%\"}}/>\r\n                              <Grid container justifyContent=\"center\" item md={12} style={{width:\"80%\", paddingTop:\"20px\"}}>\r\n                                  <form className={classes.form}>\r\n                                      <Grid container>\r\n                                          <Grid  container justifyContent=\"center\" >\r\n                                              <Typography variant=\"body2\" style={{padding:'1vw'}}>\r\n                                                  We sent verification code to your email. Please enter code.\r\n                                              </Typography>\r\n                                          </Grid>\r\n                                          \r\n                                      </Grid>\r\n                                      <Grid container>\r\n                                          <Grid  container justifyContent=\"center\" >\r\n                                              <TextField\r\n                                                  variant=\"outlined\"\r\n                                                  label=\"Verification Code\"\r\n                                                  required\r\n                                                  fullWidth\r\n                                                  className={classes.textField}\r\n                                                  value={code}\r\n                                                  onChange={handleCodeChange}\r\n                                              />\r\n                                          </Grid>\r\n                                          \r\n                                      </Grid>\r\n                                      <Grid container>\r\n                                          <Grid container item md={6} justifyContent=\"center\"> \r\n                                              <Button className={classes.createButton} onClick={handleConfirm}>\r\n                                                  Confirm     \r\n                                              </Button>\r\n                                          </Grid>\r\n                                          <Grid container item md={6} justifyContent=\"center\">\r\n                                              <Button className={classes.createButton} onClick={handleVerificationCancel}>\r\n                                                  Cancel\r\n                                              </Button>\r\n                                          </Grid>\r\n                                      </Grid>\r\n                                  </form>\r\n                              </Grid>\r\n                          </Grid>\r\n                        </Box>\r\n                      </Fade>\r\n                  </Modal>\r\n               \r\n                \r\n            </Grid>\r\n        </>\r\n    );\r\n}","export const alertType={\r\n    SUCCESS:\"ALERT_SUCCESS\",\r\n    ERROR:\"ALERT_ERROR\",\r\n    CLEAR:\"ALERT_CLEAR\"\r\n}\r\nexport const userType={\r\n    REGISTER_REQUEST:\"USER_REGISTER_REQUEST\",\r\n    REGISTER_SUCCESS:\"USER_REGISTER_SUCCESS\",\r\n    REGISTER_FAILURE:\"USER_REGISTER_FAILURE\",\r\n\r\n    LOGIN_REQUEST:\"USER_LOGIN_REQUEST\",\r\n    LOGIN_SUCCESS:\"USER_LOGIN_SUCCESS\",\r\n    LOGIN_FAILURE:\"USER_LOGIN_FAILURE\",\r\n\r\n    LOGOUT:\"USERS_LOGOUT\",\r\n\r\n    GET_ALL_REQUEST:\"USERS_GET_ALL_REQUEST\",\r\n    GET_ALL_SUCCESS:\"USERS_GET_ALL_SUCCESS\",\r\n    GET_ALL_FAILURE:\"USERS_GET_ALL_FAILURE\",\r\n\r\n    DELETE_REQUEST:\"USER_DELETE_REQUEST\",\r\n    DELETE_SUCCESS:\"USER_DELETE_SUCCESS\",\r\n    DELETE_FAILURE:\"USER_DELETE_FAILURE\"\r\n}","export const pageActions={\r\n    setPageName\r\n}\r\nfunction setPageName(name){\r\n    return{type:'pageName', name};\r\n}","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n      let web3 = null;\n      if (typeof web3 !== 'undefined') {\n        web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n        \n        resolve(web3);\n      } else {\n        resolve(web3);\n      }\n  });\n\nexport default getWeb3;\n"],"sourceRoot":""}